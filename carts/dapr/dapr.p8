pico-8 cartridge // http://www.pico-8.com
version 39
__lua__
-- start
-- dapr
-- by marc duiker
-- jun 2023
-- https://twitter.com/marcduiker
-- https://mstdn.social/@marcduiker


function _init()
	init_game()
end

function init_game()
	music(0,1000,11)
	init_map()
	add_player()
	dirx={-1,1,0,0}
	diry={0,0,-1,1}
	t=0
	
	game_over=false
	btnbuffer=-1
	_lvl=levels[1]
	_msg=message0
	_upd=update_menu
	_drw=draw_menu
end

function _update()
	t+=1
	_upd()
end

function _draw()
	cls()
	if p.isplaying then
		draw_map()
	end
	_drw()
end

-->8
--menu

function draw_menu()
	draw_outline()
	draw_header()
	print_message(_msg.title,23,12)
	print_message(_msg.line1,35,1)
	print_message(_msg.line2,43,1)
	print_message(_msg.line3,51,1)
	print_message(_msg.line4,59,1)
	print_message(_msg.line5,67,1)
	print_message(_msg.line6,75,1)
	print_message(_msg.line7,83,1)
	print_message(_msg.action,100,11)
	print(_msg.credits,hcenter(_msg.credits),115,12)
end

function draw_outline()
	rectfill(p.level.offsetx+0,p.level.offsety+0,p.level.offsetx+127,p.level.offsety+127,7)
	rect(p.level.offsetx+2,p.level.offsety+2,p.level.offsetx+125,p.level.offsety+125,14) 
end

function draw_header()
	spr(tiles.bluewall,p.level.offsetx+1*8,p.level.offsety+menu.py*8)
	spr(tiles.bluewall,p.level.offsetx+13*8,p.level.offsety+menu.py*8)
	for x=2,12 do
		spr(tiles.floor,p.level.offsetx+x*8,p.level.offsety+menu.py*8)
	end
	spr(get_frame(menu.anim_move,menu.anim_speed),p.level.offsetx+menu.px*8, p.level.offsety+menu.py*8)
	spr(get_frame(menu.anim_coin,menu.anim_speed),p.level.offsetx+(menu.px-2)*8, p.level.offsety+menu.py*8)
	spr(get_frame(menu.anim_hat,menu.anim_speed),p.level.offsetx+(menu.px+2)*8, p.level.offsety+menu.py*8)
end

function update_menu()
	p.isplaying=false
	menu={
		px=7,
		py=1,
		anim_speed=10,
		anim_move={1,2,3,4,5,6,7},
		anim_coin={75,76},
		anim_hat={8,9}
	}
	
	if btnp(❎) then
		if (p.isgameover or p.haswon) then
			_upd=update_game_over
			_drw=draw_game_over
		else
			sfx(4)
			p.levelnr+=1
			_lvl=levels[p.levelnr]
			init_bugs(_lvl)
			init_player(_lvl)
			_upd=update_player_move
			_drw=draw_player
		end
	end
end

message0={
 title="dapr - the game",
	line1="you're a developer helping",
	line2="teams to build distributed",
	line3="systems. collect the hat and",
	line4="the coins to learn about",
	line5="dapr and help the teams be",
	line6="successful. good luck and",
	line7="avoid the ghosts!",
	action="- ❎/x to start -",
	credits="made by marc duiker, 2023"
}

message1={
	title="level 1 completed!",
	line1="dapr speeds up microservice",
	line2="development by offering",
	line3="building blocks such as:",
	line4="service invocation, state",
	line5="management, pub/sub,",
	line6="workflow, secrets, bindings,",
	line7="configuration, and actors.",
	action="press ❎/x to continue",
	credits=""
}

message2 ={
	line1="i'll be wearing many hats ;)",
	line2="primarily focussing on dapr",
	line3="and the amazing community",
	line4="around it.",
	action="press ❎/x to continue"
}

message3 ={
	line1="diagrid creates products that",
	line2="enable developers to build",
	line3="and run distributed systems",
	line4="quickly and reliably.",
	action="press ❎/x to continue"
}

message4 ={
	line1="connect with me if you're",
	line2="using dapr, have feedback,",
	line3="or want to create something",
	line4="cool together!",
	action="press ❎/x to continue"
}
messages={message1,message2,message3,message4}

function update_message_level()
	if btnp(❎) then
		if (p.isgameover or p.haswon) then
			_upd=update_game_over
			_drw=draw_game_over
		else
			sfx(4)
			_upd=update_player_move
			_drw=draw_player
		end
	end
end

function print_message(text, y, color)
	if text!=nil and  #text > 0 then
		print(text, p.level.offsetx+hcenter(text), y, color)
	end
end

currentindex=1
nextindex=1
linkmenu = {
	{1, "join the dapr discord", 0},
	{2, "dapr.io", 0},
	{3, "diagrid.io", 0},
}

function update_game_over()
	music(-1,1000)
	if btnp(❎) then
		poke(0x5f80, getactivelink())
	elseif btnp(🅾️) then
		run()
	elseif btnp(3) then
		-- down
		sfx(0)
		currentindex=getactivelink()
		if currentindex == #linkmenu then
			nextindex=1
		else
			nextindex+=1
		end
	elseif btnp(2) then
		-- up
		sfx(0)
		currentindex=getactivelink()
		if currentindex == 1 then
			nextindex=#linkmenu
		else
			nextindex-=1
		end
	end
	linkmenu[currentindex][#linkmenu]=0
	linkmenu[nextindex][#linkmenu]=1
end

function getactivelink()
	for link in all(linkmenu) do
		if link[3]==1 then
			return link[1]
		end
	end
end

haswon_message={
	title="! great job !",
	line1="you helped the team learn all",
	line2="about dapr! they are ready",
	line3="to use all the building blocks",
	line4="and speed up development.",
	action="- press 🅾️/c to play again -"
}

haslost_message={
 title="! game over !",
	line1="uh oh, what happened?",
	line2="don't worry, we've applied",
	line3="a resiliency policy so you",
	line4="can retry.",
	action="- press 🅾️/c to play again -"
}

function draw_game_over()
	local message
	if (p.haswon) then
		message=haswon_message
	else
		message=haslost_message
	end
	draw_outline()
	draw_header()
	print_message(message.title,23,12)
	print_message(message.line1,35,1)
	print_message(message.line2,43,1)
	print_message(message.line3,51,1)
	print_message(message.line4,59,1)
	print_message(message.action,72,11)
	local menuy=90
	for link in all(linkmenu) do
		if link[3]==0 then
			-- regular
			print_message(link[2],menuy,0)
		else
			-- selected
			print_message("❎ "..link[2],menuy,11)
		end
		menuy+=8
	end
end

function hcenter(s)
  if s==nil then return 0 end
  return 64-#s*2
end

function ralign(s)
	if s==nil then return 0 end
	return 128-(#s+2)*2
end
-->8
-- player

function add_player()
	p={}
	p.isplaying=false
	p.levelnr=0
	p.level={offsetx=0, offsety=0}
	p.lives=3
	p.sprite=1
	p.anim_speed=10
	p.anim_still={6,7}
	p.anim_move={2,3}
	p.anim_jump={20,21}
	p.anim_bug={4,5,6}
end

function init_player(_lvl)
	p.isplaying=true
	p.levelnr=_lvl.id
	p.level=_lvl
	p.x=p.level.respawnx
	p.dx=0
	p.sx=0
	p.y=p.level.respawny
	p.dy=0
	p.sy=0
	p.t=0
	p.isstill=true
	p.isjumping=false
	p.isflipped=false
	p.seq=seq_walk
	p.ishit=false
	p.thit=0
	p.isgameover=false
	p.haswon=false
	p.respawnx=p.x
	p.respawny=p.y
	p.hashat=false
	p.hatspr=nil
end

function draw_player()
	if p.ishit then
		spr(get_frame(p.anim_bug,p.anim_speed),p.level.offsetx+p.x*8+p.dx,p.level.offsety+p.y*8+p.dy,1,1,p.isflipped)
	elseif p.isjumping then
		spr(get_frame(p.anim_jump,p.anim_speed),p.level.offsetx+p.x*8+p.dx,p.level.offsety+p.y*8+p.dy,1,1,p.isflipped)
	elseif p.isstill then
		spr(get_frame(p.anim_still,p.anim_speed),p.level.offsetx+p.x*8+p.dx,p.level.offsety+p.y*8+p.dy,1,1,p.isflipped)
	else
		spr(get_frame(p.anim_move,p.anim_speed),p.level.offsetx+p.x*8+p.dx,p.level.offsety+p.y*8+p.dy,1,1,p.isflipped)
	end
	if p.hashat then
		spr(p.hatspr,p.level.offsetx+p.x*8+p.dx,p.level.offsety+p.y*8+p.dy-animy(),1,1,p.isflipped)
	end
	draw_score()
end

function animy()
 --ensures hat moves with sprite
	return get_dy({6, 5},p.anim_speed)
end

function draw_score()
	print("level  "..  p.level.id,p.level.offsetx+2, p.level.offsety+2, 7)
	for x=0,p.lives-1 do
		spr(p.sprite, p.level.offsetx+58+x*8, p.level.offsety+0)
	end
	scoretxt=p.level.score.."/"..p.level.maxscore
	scorex=p.level.offsetx+ralign(scoretxt)-6
	spr(tiles.menuscore, scorex-12, p.level.offsety+0)
	print(scoretxt, scorex, p.level.offsety+2, 7)
end

function print_dbg()
	print(p.isstill, 0, 12, 0)
	print(p.isjumping, 0, 24, 0)
end

function update_game()
	if btnbuffer==-1 then
		btnbuffer=getbtn()
	end
	dobtn(btnbuffer)
	btnbuffer=-1
end

function update_player(_dx,_dy)
	if (_dx<0) then
		p.isflipped=true
	elseif (_dx>0) then
		p.isflipped=false
	end
	
	if (_dx==0 and _dy==0) then
		p.isstill=true
		p.isjumping=false
	else
		p.isstill=false
	end
	
	local destx=p.x+_dx
	local desty=p.y+_dy
	if p.thit%60==0 then
		p.ishit=false
		p.thit=0
	end
	if isbug(destx,desty) and not p.ishit then
			p.ishit=true
			sfx(6)
			if p.lives > 1 then
				p.lives-=1
			else
				p.lives-=1
				p.isgameover=true
				_drw=draw_game_over
				_upd=update_game_over
				return
			end
			hit_move(_dx,_dy)
			_upd=update_player_move
	end
	if p.isstill==false then 
		if isobstacle(destx,desty) then
			obstacle_move(_dx,_dy)
			sfx(1)
			_upd=update_player_move
		elseif iscollectable(destx,desty) then
			if isscore(destx,desty) then
				p.level.score+=1
			end
			if p.level.score==p.level.maxscore then
				sfx(5)
				collection_complete()
			else
				sfx(2)
			end
			p.isjumping=true
			if ishat(destx,desty) then
				p.hashat=true
				p.hatspr=getsmallhat(mget(destx,desty))
				setscreens()
			end
			mset(destx,desty,tiles.floor)
			move(_dx,_dy)
			_upd=update_player_move
		elseif isendoflevel(destx,desty) then
			level_complete()
		else
			-- nothing special
			p.ishit=false
			p.isjumping=false
			move(_dx,_dy)
			_upd=update_player_move
		end
		p.t=0
	end
	if p.ishit then
		p.thit+=1
	else 
		p.thit=0
	end
end

function level_complete()
	sfx(3)
	--p.haswon=true --temp shortcut to force end menu
	_msg=messages[p.levelnr]
	_upd=update_menu
	_drw=draw_menu
end

function move(_dx, _dy)
	p.x+=_dx
	p.y+=_dy
	p.sx=-_dx*8
	p.sy=-_dy*8
	p.dx=p.sx
	p.dy=p.sy
end

function obstacle_move(_dx, _dy)
	p.sx=_dx*8
	p.sy=_dy*8
	p.dx=0
	p.dy=0
	p.seq=seq_obstacle
end

function hit_move(_dx, _dy)
	p.sx=_dx*8
	p.sy=_dy*8
	p.dx=0
	p.dy=0
	p.seq=seq_obstacle
end

function setscreens()
	mset(p.level.serverx,p.level.servery,p.level.servertileon)	
	mset(p.level.screen1x,p.level.screen1y,p.level.screentileon)	
	mset(p.level.screen2x,p.level.screen2y,p.level.screentileon)	
end

function collection_complete()
	p.level.isdooropen=true
	mset(p.level.doorx,p.level.doory,p.level.opendoorspr)
end

function update_player_move()
	if btnbuffer==-1 then
		btnbuffer=getbtn()
	end
	p.t=min(p.t+0.25,1)
	p.seq()
	if p.t==1 then
		_upd=update_game
	end
end

function getbtn()
	for i=0,5 do
		if btnp(i) then
			return i
		end
	end
	return -1
end

function dobtn(button)
	if button<0 then 
		update_player(0,0)
		return
	end
	if button>=0 and button<4 then
		update_player(dirx[button+1],diry[button+1])
		return
	end
	if button==4 then
		run()
	end
end

function seq_walk()
	p.dx=p.sx*(1-p.t)
	p.dy=p.sy*(1-p.t)
end

function seq_obstacle()
	p.dx=p.sx*(1-p.t)
	p.dy=p.sy*(1-p.t)
end

hats = {
	{8, 52}, --blue
	{9, 52}, --blue
	{24, 53},--green
	{25, 53},--green
	{40, 54},--yellow
	{41, 54},--yellow
	{56, 55},--pink
	{57, 55} --pink
}

function getsmallhat(largehatspr)
	for hat in all(hats) do
		if hat[1] == largehatspr then
			return hat[2]
		end
	end
end


-->8
-- map

function init_map()
	level1={
		id=1,
		offsetx=16*8*0,
		offsety=16*8*0,
		mapx=0,
		mapy=0,
		isdooropen=false,
		doorx=7,
		doory=10,
		opendoorspr=32,
		closeddoorspr=16,
		screen1x=7,
		screen1y=6,
		screen2x=9,
		screen2y=6,
		screentileon=tiles.screen_green_on,
		serverx=8,
		servery=6,
		servertileon=tiles.server_green_on,
		hasplayed=false,
		respawnx=7,
		respawny=2,
		score=0,
		maxscore=12,
		bugspeed=speed.medium,
		bug1x=1,
		bug1y=7,
		bug1dir=moves.up,
		bug2x=10,
		bug2y=3,
		bug2dir=moves.right,
		bug3x=11,
		bug3y=11,
		bug3dir=moves.left}
	level2={
		id=2,
		offsetx=16*8*1,
		offsety=16*8*0,
		mapx=16,
		mapy=0,
		isdooropen=false,
		doorx=24,
		doory=10,
		opendoorspr=34,
		closeddoorspr=18,
		screen1x=7,
		screen1y=6,
		screen2x=9,
		screen2y=6,
		screentileon=tiles.screen_green_on,
		serverx=8,
		servery=6,
		servertileon=tiles.server_green_on,
		hasplayed=false,
		respawnx=7,
		respawny=2,
		score=0,
		maxscore=12,
		bugspeed=speed.medium,
		bug1x=25,
		bug1y=4,
		bug1dir=moves.left,
		bug2x=17,
		bug2y=12,
		bug2dir=moves.right,
		bug3x=28,
		bug3y=12,
		bug3dir=moves.left}
	level3={
		id=3,
		isdooropen=false,
		doorx=10,
		doory=9,
		opendoorspr=34,
		closeddoorspr=22,
		arrowx=9,
		arrowy=9,
		arrowspr=38,
		hasplayed=false,
		respawnx=7,
		respawny=7,
		score=0,
		maxscore=12,
		portalarrowx=11,
		portalarrowy=12,
		portalx=12,
		portaly=12,
		portalnr=1,
		portalspr={105,106,107,108,109}}
	level4={
		id=4,
		isdooropen=false,
		doorx=5,
		doory=6,
		opendoorspr=35,
		closeddoorspr=23,
		arrowx=6,
		arrowy=6,
		arrowspr=39,
		hasplayed=false,
		respawnx=8,
		respawny=7,
		score=0,
		maxscore=12,
		portalarrowx=4,
		portalarrowy=3,
		portalx=3,
		portaly=3,
		portalnr=1,
		portalspr={121,122,123,124,125}}
	levels={level1,level2,level3,level4}
end

tiles={
	screen_blue_off=67,
	screen_blue_on=69,
	server_blue_off=71,
	server_blue_on=73,
	screen_green_off=83,
	screen_green_on=85,
	server_green_off=87,
	server_green_on=89,
	floor=63,
	bluewall=48,
	menuscore=112,
	menuhat=113
}

local tile_types={
	wall=0,
	collectable=1,
	score=2,
	hat=3,
	server=4,
	bug=5,
	anim_state_1=6,
	anim_state_2=7
}

moves={
	up=2,
	down=3,
	left=0,
	right=1
}

speed={
	slow=30,
	medium=15,
	fast=7
}

function draw_map()
	map()
	camera(p.level.offsetx,p.level.offsety)
 if t%speed.medium==0 then
 	animate_tiles()
 end
 if t%speed.medium==0 then
 	move_bugs()
 end
end

function animate_tiles()
	for x=p.level.mapx,p.level.mapx+15 do
		for y=p.level.mapy,p.level.mapy+15 do
			if is_anim_state_1(x,y) then
				swap_tiles(x,y)
			elseif is_anim_state_2(x,y) then
				unswap_tiles(x,y)
			end
		end
	end
end

function is_anim_state_1(x,y)
	local tile=mget(x,y)
	return fget(tile,tile_types.anim_state_1)
end

function is_anim_state_2(x,y)
	local tile=mget(x,y)
	return fget(tile,tile_types.anim_state_2)
end


--animated tiles need to be next to each other
function swap_tiles(x,y)
	local tile=mget(x,y)
	mset(x,y,tile+1)
end

function unswap_tiles(x,y)
	local tile=mget(x,y)
	mset(x,y,tile-1)
end

function isendoflevel(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.server)
end

function isobstacle(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.wall)
end

function iscollectable(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.collectable)
end

function isscore(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.score)
end

function ishat(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.hat)
end

function isbug(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.bug)
end
-->8
-- tools

function get_frame(_ani,_speed)
	return _ani[flr(t/_speed)%#_ani+1]
end

function get_dy(_dys,_speed)
	return _dys[flr(t/_speed)%#_dys+1]
end
   
function rndint(_min, _max)
	return flr(_min+rnd(_max-_min))
end
-->8
-- bugs

local x_movements={-1,1,0,0}
local y_movements={0,0,-1,1}
local reverse_directions={1,0,3,2}

local bug1={x=nil,y=nil,dir=nil,tile=nil,speed=nil}
local bug2={x=nil,y=nil,dir=nil,tile=nil,speed=nil}
local bug3={x=nil,y=nil,dir=nil,tile=nil,speed=nil}

local bugs={bug1,bug2,bug3}
local bugs_anim={128,129}

function init_bugs(level)
	bug1.x=level.bug1x
	bug1.y=level.bug1y
	bug1.dir=level.bug1dir
	bug1.tile=tiles.floor
	bug1.speed=level.bugspeed
	bug2.x=level.bug2x
	bug2.y=level.bug2y
	bug2.dir=level.bug2dir
	bug2.tile=tiles.floor
	bug2.speed=level.bugspeed
	bug3.x=level.bug3x
	bug3.y=level.bug3y
	bug3.dir=level.bug3dir
	bug3.tile=tiles.floor
	bug3.speed=level.bugspeed
end

function move_bugs()
	for bug in all(bugs) do
		move_bug(bug)
	end
end

function move_bug(bug)
	if (not try_swap_and_move(bug)) then
		bug.dir=reverse_directions[bug.dir+1]
		try_swap_and_move(bug)
	end
end

function try_swap_and_move(bug)
	local new_x=bug.x+x_movements[bug.dir+1]
	local new_y=bug.y+y_movements[bug.dir+1]
	if (not isobstacle(new_x, new_y) and not isbug(new_x,new_y)) then
		swap_tiles_with(bug,new_x,new_y)
		bug.x=new_x
		bug.y=new_y
		return true
	end
	return false
end

function swap_tiles_with(bug,x2,y2)
	local tile=mget(bug.x,bug.y)
	mset(bug.x,bug.y,bug.tile)
	bug.tile=mget(x2,y2)
	mset(x2,y2,get_frame(bugs_anim,bug.speed))
end
__gfx__
00000000000ccc000000ccc00000ccc0000ccc00000ccc00000ccc00000000007777777777777777777777777777777777777777777777777777777777777777
0000000000cccc00000ccc00000ccc0000cccc0000cccc0000cccc00000ccc007777777777c11177777799990007777777771777777737777777277777aaaa77
0070070000cfff0000ccff0000ccff000027f2700027f27000cfff0000cccc0077c1117777c111770009fff9444799997c7717177b7737377e7727277aaaaaa7
0007700000c2f20000cff20000cff2000022f2200022f22000c2f20000cfff0077c1117777c111774449cfc90409fff9c7771771b7773773e777277279aaaa97
000770000c0fff000c0fff000c0fff000f0f7f0f0c0f7f0000cfff0000c2f20077c11177c11111110409fff94449cfc9c77c7771b77b7773e77e777279999997
0070070000feeef0000eee00000eee0000eeeee00feeeeef00feeef00c0fff00c1111111777777774449ddd93339fff97c7c77177b7b77377e7e772779999997
000000000001010000011f000001f10000010100000101000001010000feeef077777777777777773337ddd71119ddd9777c7777777b7777777e777779999997
000000000008080000800800000808000080008000080800000808000008080077777776777777761717f7f61717f7f677777776777777767777777677999976
ccccccccbbbbbbbbaaaaaaaaeeeeeeee000ccc00000ccc0000000000000000007777777777777777777777777777777771c77c1773b77b3779a77a9772e77e27
1111111c3333333b9999999a2222222e00cccc0000cccc0000000000000000007777777777b33377ccc77777777788887c7777c77b7777b77a7777a77e7777e7
1ccccc1c3bbbbb3b9aaaaa9a2eeeee2e0027f27000cfff00000000000000000077b3337777b33377fff78888ccc844487c7777c77b7777b77a7777a77e7777e7
1c111c1c3b333b3b9a999a9a2e222e2e0022f22000c2f200000000000000000077b3337777b333772f284448fff80408c777777cb777777ba777777ae777777e
1ccccc1c3bbbbb3b9aaaaa9a2eeeee2e0c0fff000c0fff00000000000000000077b33377b3333333fff804082f2844487c7777c77b7777b77a7777a77e7777e7
1111111c3333333b9999999a2222222e00feeef000feeef00000000000000000b333333377777777eee84448fff899987c7777c77b7777b77a7777a77e7777e7
11111c1c3b33333b9a99999a22222e2e000101000001010000000000000000007777777777777777ddd79997eee7111771c77c1773b77b3779a77a9772e77e27
11111116333333369999999622222226000808000008080000000000000000007777777677777776d7d74746d7d7474675555556755555567555555675555556
ccccccccbbbbbbbbaaaaaaaaeeeeeeee000000000000000000000000000000007777777777777777777777777777777700000000000000000000000000000000
1777777c3777777b9777777a2777777e000000000000000000000000000000007777777777a999777777bbb70000777700000000000000000000000000000000
1777777c3777777b9777777a2777777e0000000000000000000000000000000077a9997777a999770000444b9997bbb700000000000000000000000000000000
1777777c3777777b9777777a2777777e0000000000000000000000000000000077a9997777a99977999b040b292b444b00000000000000000000000000000000
1777777c3777777b9777777a2777777e0000000000000000000000000000000077a99977a9999999292b444b999b040b00000000000000000000000000000000
1777777c3777777b9777777a2777777e00000000000000000000000000000000a999999977777777999bfffbcccb444b00000000000000000000000000000000
1777777c3777777b9777777a2777777e000000000000000000000000000000007777777777777777ccc7fff71117fff700000000000000000000000000000000
17777776377777769777777627777776000000000000000000000000000000007777777677777776171747461717474600000000000000000000000000000000
ccccccccbbbbbbbbaaaaaaaaeeeeeeee000000000000000000000000000000007777777777777777777777777777777700000000000000000000000077777777
1111111c3333333b9999999a2222222e000000000000000000000000000000007777777777e22277000077777777222200000000000000000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e0000000000000000000000000000000077e2227777e22277444022220000fff200000000000000000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e0000000000000000000000000000000077e2227777e222771410fff244403f3700000000000000000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e0000000000000000000000000000000077e22277e222222244403f371410fff700000000000000000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e000c1100000b3300000a9900000e2200e2222222777777772220fff74440999700000000000000000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e000c1100000b3300000a9900000e22007777777777777777eee799972220000700000000000000000000000077777777
1111111633333336999999962222222600c1111000b3333000a9999000e222207777777677777776e7e70706e7e7070600000000000000000000000077777776
6666666666666666666666661ccccccc1ccccccc1ccccccc1ccccccc1ccccccc1ccccccc1ccccccc1ccccccc7777777777777777777777777777777700000000
6666666666666666666666661c00000c1c00000c1c77777c1c77777c1c26668c1c86662c1c3666bc1cb6663c771cc7777771c7777771c7777770177700000000
6600000000000000000000661c00000c1c00000c1c27777c1c77e77c1c65556c1c65556c1c6c116c1c6c116c71cccc77771ccc77771ccc777701117700000000
6607777777777777777770661c00600c1c00000c1c7e7e2c1c2e7e7c1c65556c1c65556c1c6c116c1c6c116c1cc11cc7771c1c7771ccccc77011111700000000
6607000000000000000070661c00000c1c00000c1c77e77c1c77772c1c55555c1c55555c1c11111c1c11111c1c1111c7771c1c777771c7777770177700000000
6607000000000000000070661ccccccc1ccccccc1ccccccc1ccccccc1c86662c1c26668c1cb6663c1c3666bc71cccc77771ccc777771c7777770177700000000
6607000000000000000070667771c7777771c7777771c7777771c7771ccccccc1ccccccc1ccccccc1ccccccc771cc7777771c7777771c7777770177700000000
660700000000000000007066771ccc76771ccc76771ccc76771ccc761c77771c1c77771c1c77771c1c77771c7777777677777776777777767777777600000000
6607000000000000000070663bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb7777777777777777777777777777777700000000
6607000000000000000070663b00000b3b00000b3b77777b3b77777b3b26668b3b86662b3b3666bb3bb6663b773bb7777773b7777773b7777770377700000000
6607000000000000000070663b00000b3b00000b3b87777b3b77977b3b65556b3b65556b3b6c116b3b6c116b73bbbb77773bbb77773bbb777703337700000000
6607000000000000000070663b00600b3b00000b3b79798b3b89797b3b65556b3b65556b3b6c116b3b6c116b3bb33bb7773b3b7773bbbbb77033333700000000
6607000000000000000070663b00000b3b00000b3b77977b3b77778b3b55555b3b55555b3b11111b3b11111b3b3333b7773b3b777773b7777770377700000000
6607000000000000000070663bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3b86662b3b26668b3bb6663b3b3666bb73bbbb77773bbb777773b7777770377700000000
6607000000000000000070667773b7777773b7777773b7777773b7773bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb773bb7777773b7777773b7777770377700000000
660700000000000000007066773bbb76773bbb76773bbb76773bbb763b77773b3b77773b3b77773b3b77773b7777777677777776777777767777777600000000
6607000000000000000070669aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa7777777777777777000000000000000000000000
6607000000000000000070669a00000a9a00000a9a77777a9a77777a9a26668a9a86662a9a3666ba9ab6663a779aa7777779a777000000000000000000000000
6607000000000000000070669a00000a9a00000a9a87777a9a77977a9a65556a9a65556a9a6c116a9a6c116a79aaaa77779aaa77000000000000000000000000
6607000000000000000070669a00600a9a00000a9a79798a9a89797a9a65556a9a65556a9a6c116a9a6c116a9aa99aa7779a9a77000000000000000000000000
6607777777777777777770669a00000a9a00000a9a77977a9a77778a9a55555a9a55555a9a11111a9a11111a9a9999a7779a9a77000000000000000000000000
6600000000000000000000669aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa9a86662a9a26668a9ab6663a9a3666ba79aaaa77779aaa77000000000000000000000000
6666666666666666666666667779a7777779a7777779a7777779a7779aaaaaaa9aaaaaaa9aaaaaaa9aaaaaaa779aa7777779a777000000000000000000000000
666666666666666666666666779aaa76779aaa76779aaa76779aaa769a77779a9a77779a9a77779a9a77779a7777777677777776000000000000000000000000
0000000000000000dddddddd2eeeeeee2eeeeeee2eeeeeee2eeeeeee2eeeeeee2eeeeeee2eeeeeee2eeeeeee7777777777777777000000000000000000000000
001cc00000000000dddddddd2e00000e2e00000e2e77777e2e77777e2e26668e2e86662e2e3666be2eb6663e772ee7777772e777000000000000000000000000
01cccc0000c11100dddddddd2e00000e2e00000e2e87777e2e77977e2e65556e2e65556e2e6c116e2e6c116e72eeee77772eee77000000000000000000000000
1cc11cc000c11100dddddddd2e00600e2e00000e2e79798e2e89797e2e65556e2e65556e2e6c116e2e6c116e2ee22ee7772e2e77000000000000000000000000
1c1111c000c11100dddddddd2e00000e2e00000e2e77977e2e77778e2e55555e2e55555e2e11111e2e11111e2e2222e7772e2e77000000000000000000000000
01cccc00c1111111dddddddd2eeeeeee2eeeeeee2eeeeeee2eeeeeee2e86662e2e26668e2eb6663e2e3666be72eeee77772eee77000000000000000000000000
001cc00000000000dddddddd7772e7777772e7777772e7777772e7772eeeeeee2eeeeeee2eeeeeee2eeeeeee772ee7777772e777000000000000000000000000
0000000000000000dddddddd772eee76772eee76772eee76772eee762e77772e2e77772e2e77772e2e77772e7777777677777776000000000000000000000000
77666777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677776667770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76272677767776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677762726770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677767776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677767776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777677777670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
75555576555555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddcccdddddcccdddddddddddddddddddddddddddddddddddddddddddddddddddddddd
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddccccddddccccdddddddddddddddddddddddddddd1ccddddddddddddddddddddddddd
dd7ddd777d7d7d777d7ddddddddddd77ddddddddddddddddddddddddddddcfffddddcfffddddddddddddddddddddddddddd1ccccdddddd777ddd7d77dd777ddd
dd7ddd7ddd7d7d7ddd7dddddddddddd7ddddddddddddddddddddddddddddc2f2ddddc2f2dddddddddddddddddddddddddd1cc11ccddddd7d7dd7ddd7dddd7ddd
dd7ddd77dd7d7d77dd7dddddddddddd7dddddddddddddddddddddddddddcdfffdddcdfffdddddddddddddddddddddddddd1c1111cddddd7d7dd7ddd7dd777ddd
dd7ddd7ddd777d7ddd7dddddddddddd7ddddddddddddddddddddddddddddfeeefdddfeeefdddddddddddddddddddddddddd1ccccdddddd7d7dd7ddd7dd7ddddd
dd777d777dd7dd777d777ddddddddd777dddddddddddddddddddddddddddd1d1ddddd1d1dddddddddddddddddddddddddddd1ccddddddd777d7ddd777d777ddd
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd8d8ddddd8d8dddddddddddddddddddddddddddddddddddddddddddddddddddddddd
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
22222226222222262222222622222226222222262222222622222226222222262222222622222226222222262222222622222226222222262222222622222226
eeeeeeee7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777eeeeeeee
2222222e77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777772222222e
2e2e2e2e77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777772e2e2e2e
22222226777777767777777677777776777777767777777677777776777777767777777677777776777777767777777677777776777777767777777622222226
eeeeeeee7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777eeeeeeee
2222222e77777777777ccc777777777777777777777777777777777777666777777777777777777777777777777777777777777777c11177777777772222222e
2e2e2e2e7777777777cccc777777777777777777777777777777777776777677777777777777777777777777777777777777777777c11177777777772e2e2e2e
2e2e2e2e7777777777cfff777777777777777777777777777777777776272677777777777777777777777777777777777777777777c11177777777772e2e2e2e
2e2e2e2e7777777777c2f27777777777777777777777777777777777767776777777777777777777777777777777777777777777c1111111777777772e2e2e2e
2e2e2e2e777777777c7fff777777777777777777777777777777777776777677777777777777777777777777777777777777777777777777777777772e2e2e2e
2e2e2e2e7777777777feeef77777777777777777777777777777777767777767777777777777777777777777777777777777777777777777777777772e2e2e2e
22222226777777767778787677777776777777767777777677777776555555567777777677777776777777767777777677777776777777767777777622222226
eeeeeeee777777777777777777777777cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc777777777777777777777777eeeeeeee
2222222e7777777777777777777777771111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c7777777777777777777777772222222e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777772e2e2e2e
22222226777777767777777677777776111111161111111611111116111111161111111611111116111111161111111677777776777777767777777622222226
eeeeeeee777777777777777777777777cccccccccccccccc7777777777777777777777777777777777777777cccccccc777777777777777777777777eeeeeeee
2222222e777777777771c777779aa7771111111c1111111c77777777777777777777777777777777777777771111111c7779a777772ee777777777772222222e
2e2e2e2e77777777771ccc7779aaaa771c1c1c1c1c1c1c1c77777777777777777777777777777777777777771c1c1c1c779aaa7772eeee77777777772e2e2e2e
2e2e2e2e77777777771c1c779aa99aa71c1c1c1c1c1c1c1c77777777777777777777777777777777777777771c1c1c1c779a9a772ee22ee7777777772e2e2e2e
2e2e2e2e77777777771c1c779a9999a71c1c1c1c1c1c1c1c77777777777777777777777777777777777777771c1c1c1c779a9a772e2222e7777777772e2e2e2e
2e2e2e2e77777777771ccc7779aaaa771c1c1c1c1c1c1c1c77777777777777777777777777777777777777771c1c1c1c779aaa7772eeee77777777772e2e2e2e
2e2e2e2e777777777771c777779aa7771c1c1c1c1c1c1c1c77777777777777777777777777777777777777771c1c1c1c7779a777772ee777777777772e2e2e2e
22222226777777767777777677777776111111161111111677777776777777767777777677777776777777761111111677777776777777767777777622222226
eeeeeeee777777777777777777777777cccccccccccccccc777777773bbbbbbb3bbbbbbb3bbbbbbb77777777cccccccc777777777777777777777777eeeeeeee
2222222e77777777772ee7777773b7771111111c1111111c777777773b00000b3b86662b3b00000b777777771111111c773bb7777771c777777777772222222e
2e2e2e2e7777777772eeee77773bbb771c1c1c1c1c1c1c1c777777773b00000b3b65556b3b00000b777777771c1c1c1c73bbbb77771ccc77777777772e2e2e2e
2e2e2e2e777777772ee22ee7773b3b771c1c1c1c1c1c1c1c777777773b00000b3b65556b3b00000b777777771c1c1c1c3bb33bb7771c1c77777777772e2e2e2e
2e2e2e2e777777772e2222e7773b3b771c1c1c1c1c1c1c1c777777773b00000b3b55555b3b00000b777777771c1c1c1c3b3333b7771c1c77777777772e2e2e2e
2e2e2e2e7777777772eeee77773bbb771c1c1c1c1c1c1c1c777777773bbbbbbb3b26668b3bbbbbbb777777771c1c1c1c73bbbb77771ccc77777777772e2e2e2e
2e2e2e2e77777777772ee7777773b7771c1c1c1c1c1c1c1c777777777773b7773bbbbbbb7773b777777777771c1c1c1c773bb7777771c777777777772e2e2e2e
22222226777777767777777677777776111111161111111677777776773bbb763b77773b773bbb76777777761111111677777776777777767777777622222226
eeeeeeee777777777777777777777777cccccccccccccccc77777777ccc78888777777770007999977777777cccccccc777777777777777777777777eeeeeeee
2222222e7777777777777777777777771111111c1111111c77777777fff84448777037774449fff9777777771111111c7777777777777777777777772222222e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c777777772f280408770333770409cfc9777777771c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c77777777fff84448703333374449fff9777777771c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c777777777f7874787770377774797f79777777771c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c77777777eee79997777037773337ddd7777777771c1c1c1c7777777777777777777777772e2e2e2e
2e2e2e2e7777777777777777777777771c1c1c1c1c1c1c1c77777777eee79997777037773337ddd7777777771c1c1c1c7777777777777777777777772e2e2e2e
22222226777777767777777677777776111111161111111677777776fef74946777777764347fdf6777777761111111677777776777777767777777622222226
eeeeeeee77777777cccccccccccccccccccccccc777777777777777777777777777777777777777777777777cccccccccccccccccccccccc77777777eeeeeeee
2222222e776667771111111c1111111c1111111c7777777777777777777777777777777777777777777777771111111c1111111c1111111c777777772222222e
2e2e2e2e767776771c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e762726771c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e767776771c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e767776771c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e677777671c1c1c1c1c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777771c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
22222226555555561111111611111116111111167777777677777776777777767777777677777776777777761111111611111116111111167777777622222226
eeeeeeee77777777cccccccccccccccc777777777777777777777777777777777777777777777777777777777777777777777777cccccccc77777777eeeeeeee
2222222e777777771111111c1111111c7777777777777777777777777777777777777777777777777777777777777777777777771111111c777777772222222e
2e2e2e2e777777771c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777777777777777777777777777771c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777777777777777777777777777771c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777777777777777777777777777771c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777777777777777777777777777771c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c7777777777777777777777777777777777777777777777777777777777777777777777771c1c1c1c777777772e2e2e2e
22222226777777761111111611111116777777767777777677777776777777767777777677777776777777767777777677777776111111167777777622222226
eeeeeeee77777777cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc77777777eeeeeeee
2222222e777777771111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c777777772222222e
2e2e2e2e777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1ccccc1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c111c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1ccccc1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1111111c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
2e2e2e2e777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c11111c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777772e2e2e2e
22222226777777761111111611111116111111161111111611111116111111161111111611111116111111161111111611111116111111167777777622222226
eeeeeeee77777777aaaaaaaaaaaaaaaa7777777777777777777777777777777777777777777777777777777777777777aaaaaaaaaaaaaaaa77777777eeeeeeee
2222222e777777779999999a9999999a77777777777777777766677777777777777777777777777777777777777777779999999a9999999a777777772222222e
2e2e2e2e777777779a9a9a9a9a9a9a9a77777777777777777677767777777777777777777777777777777777777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a77777777777777777627267777777777777777777777777777777777777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a77777777777777777677767777777777777777777777777777777777777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a77777777777777777677767777777777777777777777777777777777777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a77777777777777776777776777777777777777777777777777777777777777779a9a9a9a9a9a9a9a777777772e2e2e2e
22222226777777769999999699999996777777767777777655555556777777767777777677777776777777767777777699999996999999967777777622222226
eeeeeeee77777777aaaaaaaaaaaaaaaa77777777bbbbbbbb77777777777777777777777777777777bbbbbbbb77777777aaaaaaaaaaaaaaaa77777777eeeeeeee
2222222e777777779999999a9999999a777777773333333b7771c777779aa7777772e777773bb7773333333b777777779999999a9999999a777777772222222e
2e2e2e2e777777779a9a9a9a9a9a9a9a777777773b3b3b3b771ccc7779aaaa77772eee7773bbbb773b3b3b3b777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a777777773b3b3b3b771c1c779aa99aa7772e2e773bb33bb73b3b3b3b777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a777777773b3b3b3b771c1c779a9999a7772e2e773b3333b73b3b3b3b777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a777777773b3b3b3b771ccc7779aaaa77772eee7773bbbb773b3b3b3b777777779a9a9a9a9a9a9a9a777777772e2e2e2e
2e2e2e2e777777779a9a9a9a9a9a9a9a777777773b3b3b3b7771c777779aa7777772e777773bb7773b3b3b3b777777779a9a9a9a9a9a9a9a777777772e2e2e2e
22222226777777769999999699999996777777763333333677777776777777767777777677777776333333367777777699999996999999967777777622222226
eeeeeeee77777777777777777777777777777777bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb77777777777777777777777777777777eeeeeeee
2222222e777777777777777777777777777777773333333b3333333b3333333b3333333b3333333b3333333b777777777777777777777777777777772222222e
2e2e2e2e777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777777777777777777777777777772e2e2e2e
2e2e2e2e777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777777777777777777777777777772e2e2e2e
2e2e2e2e777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777777777777777777777777777772e2e2e2e
2e2e2e2e777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777777777777777777777777777772e2e2e2e
2e2e2e2e777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777777777777777777777777777772e2e2e2e
22222226777777767777777677777776777777763333333633333336333333363333333633333336333333367777777677777776777777767777777622222226
eeeeeeee7777777777777777777777777777777777777777bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb7777777777777777777777777777777777777777eeeeeeee
2222222e77777777777777777777777777777777777777773333333b3333333b3333333b3333333b77777777777777777777777777777777777777772222222e
2e2e2e2e77777777777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b77777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b77777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b77777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b77777777777777777777777777777777777777772e2e2e2e
2e2e2e2e77777777777777777777777777777777777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b77777777777777777777777777777777777777772e2e2e2e
22222226777777767777777677777776777777767777777633333336333333363333333633333336777777767777777677777776777777767777777622222226
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
22222226222222262222222622222226222222262222222622222226222222262222222622222226222222262222222622222226222222262222222622222226

__gff__
00000000000000004a8a41810202020201010101000000004a8a41810000000000000000000000004a8a41810000000001010101000000004a8a418100000000000000418141814181418146865090000000004181418141814181468650900000000041814181418141814686000000000a0041814181418141814686000000
60a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
7272727272727272727272727272727272727272727272727272727272727272000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333333333333333333333333333331313131313131313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3f3f3f3f3f3f3f3f3f3f33313f3f3f3f3f3f3f3f3f3f3f3f3f3f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3f3f3f3f3f3f3f3f083f33313f3333333333333f3f303030303f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f30303030303030303f3f3f33313f335b6c5b3f3f3f3f6b5c6b303f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f4b6c30303f3f3f3f3f306b7c3f33313f333333333f3f3030303030303f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f7c5b30303f5357533f305c4b3f33313f3f3f3f3f3f3f3f3f3f3f3f3f3f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f30303f1a5d0a3f303f3f3f33313131313f3232323232323f31313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3030303f3f3f3f3f3f3030303f3331431a6b3f323f434743323f6c0a4331000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f30303f3f3f3f3f3f3f3f3f303f33313131313f323f2a5d3a323f31313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3030303030103030303030303f33313f3f3f3f3232321232323f3f3f3f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f32323f3f3f3f3f3f3f3f32323f33313f3030303030303f33333333333f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f32323f314b6c7b5c313f32323f33313f3f7c6b7c3f303f333f4b6c4b3f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3131313131313f3f3f3f33313f303030303f303f333f3333333f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3f313131313f3f3f3f3f33313f3f3f3f3f3f3f3f3f3f3f3f3f3f31000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333333333333333333333333333331313131313131313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
090400001f11413015150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070800001333307332000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
030400001d32524300243350030029335003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
030800001f3242b331117002d335000002f3350000030335000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
030800001c3141f3252333526335233351f3251c3151c302000003000000000320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
030800001f3242b33111700243351f3001f335000002b335000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
030400001f3242b323000001d32429323000000e3241a3230c324183200c3200c3260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d1000201d122000002111523121000001f12200000181221d122000001d1151f1251f12200000181121a1251f1220000023115241210000024122000002411524122330002611524121231121f1121d11518115
0d1000201d122000002111523121000001f12200000181221d122000001d1151f1251f12200000181121a1251f122000002311524121000002412200000241152412233000261152b1222b1122b1122b11500000
0d1000201d122000002111523121000001f12200000181221d122000001d1151f1251f12200000181121a1251f122000002311524121000002412200000241152412233000231152412529112291121d11518125
0b1000001151411511115211152111522115221151211515115141151111521115211152211522115121151513514135111352113521135221352213522135151351413511135211352113522135221352213515
0b1000001151411511115211152111522115221151211515115141151111521115211152211522115121151513514135111352113521135221352213522135151d5141d5111d5211d5211d5221d5221d5221d515
0b1000001151411511115211152111522115221151211515115141151111521115211152211522115121151513514135111352113521135221352213522135151f5141f5111f5211f5211f5221f5221f5221f515
23100000051350e5000e5000513504500045000513504500045000000005125000000513504500045000450007135135001350007135155001550007135155001550015500071251550007135155001550000000
23100000051350e5000e5000513504500045000513504500045000000005125000000513504500045000512507135135001350007135155001550007135155001550015500071251550007135155001550007125
031000201163311635000000000035633356350000034500000000000011633116353563335635345003450011633116350000000000356333563534500345000000000000116331163535633356353450000000
9d0e00201a3003240037600376001a3003760037600376001a3000000037600376001a3000000037600000001a3003240037600376001a3003760037600376001a3000000037600376001a300000003760037600
__music__
00 070a0d0f
00 090b0e0f
00 070a0d0f
00 080c0e0f
00 070a4d4f
00 090b4e4f
00 070a4d4f
02 080c4e4f

