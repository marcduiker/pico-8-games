pico-8 cartridge // http://www.pico-8.com
version 39
__lua__
-- start
-- dapr
-- by marc duiker
-- jun 2023
-- https://twitter.com/marcduiker
-- https://mstdn.social/@marcduiker


function _init()
	init_game()
end

function init_game()
	music(0,1000)
	init_map()
	_lvl=levels[1]
	init_bugs(_lvl)
	add_player()
	dirx={-1,1,0,0}
	diry={0,0,-1,1}
	t=0
	
	game_over=false
	btnbuffer=-1
	_msg=messages[1]
	_upd=update_menu
	_drw=draw_menu
end

function _update()
	t+=1
	_upd()
end

function _draw()
	cls()
	draw_map()
	_drw()
end

-->8
--menu

function draw_menu()
	draw_outline()
	draw_header()
	print_message(_msg.title,23,12)
	print_message(_msg.line1,35,1)
	print_message(_msg.line2,43,1)
	print_message(_msg.line3,51,1)
	print_message(_msg.line4,59,1)
	print_message(_msg.line5,67,1)
	print_message(_msg.line6,75,1)
	print_message(_msg.line7,83,1)
	print_message(_msg.action,100,11)
	print(_msg.credits,hcenter(_msg.credits),115,12)
end

function draw_outline()
	rectfill(0,0,127,127,7)
	rect(2,2,125,125,14) 
end

function draw_header()
	spr(tiles.bluewall,1*8,menu.py*8)
	spr(tiles.bluewall,13*8,menu.py*8)
	for x=2,12 do
		spr(tiles.floor,x*8,menu.py*8)
	end
	spr(get_frame(menu.anim_move,menu.anim_speed),menu.px*8,menu.py*8)
	spr(get_frame(menu.anim_coin,menu.anim_speed),(menu.px-2)*8, menu.py*8)
	spr(get_frame(menu.anim_hat,menu.anim_speed),(menu.px+2)*8, menu.py*8)
end

function update_menu()
	menu={
		px=7,
		py=1,
		anim_speed=10,
		anim_move={1,2,3,4,5,6,7},
		anim_coin={75,76},
		anim_hat={8,9}
	}
	
	if btnp(❎) then
		sfx(4)
		_upd=update_game
		_drw=draw_player
	end
end

message0={
 title="dapr - the game",
	line1="you're a developer helping",
	line2="teams to build distributed",
	line3="systems. collect the hat and",
	line4="the coins to learn about",
	line5="dapr and help the teams be",
	line6="successful. good luck and",
	line7="avoid the ghosts!",
	action="- ❎/x to start -",
	credits="made by marc duiker, jun 2023"
}

message1={
	title="level 1 completed!",
	line1="dapr speeds up microservice",
	line2="development by offering",
	line3="building blocks for:",
	line4="service invocation, state",
	line5="management, pub/sub,",
	line6="workflow, secrets, bindings,",
	line7="configuration, and actors.",
	action="press ❎/x to continue",
	credits=""
}

message2 ={
	line1="i'll be wearing many hats ;)",
	line2="primarily focussing on dapr",
	line3="and the amazing community",
	line4="around it.",
	action="press ❎/x to continue"
}

message3 ={
	line1="diagrid creates products that",
	line2="enable developers to build",
	line3="and run distributed systems",
	line4="quickly and reliably.",
	action="press ❎/x to continue"
}

message4 ={
	line1="connect with me if you're",
	line2="using dapr, have feedback,",
	line3="or want to create something",
	line4="cool together!",
	action="press ❎/x to continue"
}
messages={message0,message1,message2,message3,message4}

function update_message_level()
	if btnp(❎) then
		if p.isgameover then
			_upd=update_game_over
			_drw=draw_game_over
		else
			sfx(4)
			_upd=update_player_move
			_drw=draw_player
		end
	end
end

function draw_message_level()
	local x1=0
	local x2=128
	rectfill(x1,30,x2,114,0)
	rect(x1+2,32,x2-2,112,11)
	spr(get_frame(menu.anim_move,menu.anim_speed), menu.px*8, 40)
	if p.hashat then
		spr(p.hatspr,menu.px*8,33)
	end
	print_message(p.message.line1, 54, 7)
	print_message(p.message.line2, 64, 7)
	print_message(p.message.line3, 74, 7)
	print_message(p.message.line4, 84, 7)
	print_message(p.message.action, 100, 11)
end

function print_message(text, y, color)
	if #text > 0 then
		print(text, hcenter(text), y, color)
	end
end

currentindex=1
nextindex=1
linkmenu = {
	{1, "twitter.com/marcduiker", 1},
	{2, "mstdn.social/@marcduiker", 0},
	{3, "dapr.io", 0},
	{4, "diagrid.io", 0},
}

function update_game_over()
	music(-1,1000)
	if btnp(❎) then
		poke(0x5f80, getactivelink())
	elseif btnp(🅾️) then
		run()
	elseif btnp(3) then
		-- down
		sfx(0)
		currentindex=getactivelink()
		if currentindex == 4 then
			nextindex=1
		else
			nextindex+=1
		end
	elseif btnp(2) then
		-- up
		sfx(0)
		currentindex=getactivelink()
		if currentindex == 1 then
			nextindex=4
		else
			nextindex-=1
		end
	end
	linkmenu[currentindex][3]=0
	linkmenu[nextindex][3]=1
end

function getactivelink()
	for link in all(linkmenu) do
		if link[3]==1 then
			return link[1]
		end
	end
end

function draw_game_over()
	local title="! game over !"
	local line1="uh oh, what happened?"
	local line2="don't worry, we've applied"
	local line3="a resiliency policy so you"
	local line4="can retry."
	local action="- press 🅾️/c to play again -"
	draw_outline()
	draw_header()
	print_message(title,23,12)
	print_message(line1,35,1)
	print_message(line2,43,1)
	print_message(line3,51,1)
	print_message(line4,59,1)
	print_message(action,72,11)
	local menuy=90
	for link in all(linkmenu) do
		if link[3]==0 then
			-- regular
			print_message(link[2],menuy,0)
		else
			-- selected
			print_message("❎ "..link[2],menuy,11)
		end
		menuy+=8
	end
end

function hcenter(s)
  if s==nil then return 0 end
  return 64-#s*2
end

function ralign(s)
	if s==nil then return 0 end
	return 128-(#s+2)*2
end
-->8
-- player

function add_player()
	p={}
	p.lives=3
	p.levelnr=1
	p.level=level1
	p.x=p.level.respawnx
	p.dx=0
	p.sx=0
	p.y=p.level.respawny
	p.dy=0
	p.sy=0
	p.t=0
	p.sprite=1
	p.anim_speed=10
	p.anim_still={6,7}
	p.anim_move={2,3}
	p.anim_jump={20,21}
	p.anim_bug={4,5,6}
	p.isstill=true
	p.isjumping=false
	p.isflipped=false
	p.seq=seq_walk
	p.previouslevel=nil
	p.ishit=false
	p.thit=0
	p.isgameover=false
	p.respawnx=p.x
	p.respawny=p.y
	p.messagenr=1
	p.message=message1
	p.hashat=false
	p.hatspr=nil
end

function draw_player()
	if p.ishit then
		spr(get_frame(p.anim_bug,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	elseif p.isjumping then
		spr(get_frame(p.anim_jump,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	elseif p.isstill then
		spr(get_frame(p.anim_still,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	else
		spr(get_frame(p.anim_move,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	end
	if p.hashat then
		spr(p.hatspr,p.x*8+p.dx,p.y*8+p.dy-animy(),1,1,p.isflipped)
	end
	draw_score()
end

function animy()
 --ensures hat moves with sprite
	return get_dy({6, 5},p.anim_speed)
end

function draw_score()
	print("level  "..  p.level.id,2, 2, 7)
	for x=0,p.lives-1 do
		spr(p.sprite, 58+x*8, 0)
	end
	scorex=ralign(""..p.level.score)
	spr(tiles.menuscore, scorex-12, 0)
	print(p.level.score, scorex, 2, 7)
end

function print_dbg()
	print(p.isstill, 0, 12, 0)
	print(p.isjumping, 0, 24, 0)
end

function update_game()
	if btnbuffer==-1 then
		btnbuffer=getbtn()
	end
	dobtn(btnbuffer)
	btnbuffer=-1
end

function update_player(_dx,_dy)
	if (_dx<0) then
		p.isflipped=true
	elseif (_dx>0) then
		p.isflipped=false
	end
	
	if (_dx==0 and _dy==0) then
		p.isstill=true
		p.isjumping=false
	else
		p.isstill=false
	end
	
	local destx=p.x+_dx
	local desty=p.y+_dy
	if p.thit%60==0 then
		p.ishit=false
		p.thit=0
	end
	if isbug(destx,desty) and not p.ishit then
			p.ishit=true
			sfx(6)
			if p.lives > 1 then
				p.lives-=1
			else
				p.lives-=1
				p.isgameover=true
				_drw=draw_game_over
				_upd=update_game_over
				return
			end
			hit_move(_dx,_dy)
			_upd=update_player_move
	end
	if p.isstill==false then 
		if isobstacle(destx,desty) then
			obstacle_move(_dx,_dy)
			sfx(1)
			_upd=update_player_move
		elseif iscollectable(destx,desty) then
			if isscore(destx,desty) then
				p.level.score+=1
			end
			if p.level.score==p.level.maxscore then
				sfx(3)
				collection_complete()
			else
				sfx(2)
			end
			p.isjumping=true
			if ishat(destx,desty) then
				p.hashat=true
				p.hatspr=getsmallhat(mget(destx,desty))
				setscreens()
			end
			mset(destx,desty,tiles.floor)
			move(_dx,_dy)
			_upd=update_player_move
		elseif isendoflevel(destx,desty) then
			sfx(5)
			-- move to next level
			p.levelnr+=1
			_msg=messages[p.levelnr]	
			_upd=update_menu --update_message_level
			_drw=draw_menu --draw_message_level
		else
			-- nothing special
			sfx(0)
			p.ishit=false
			p.isjumping=false
			move(_dx,_dy)
			_upd=update_player_move
		end
		p.t=0
	end
	if p.ishit then
		p.thit+=1
	else 
		p.thit=0
	end
end

function move(_dx, _dy)
	p.x+=_dx
	p.y+=_dy
	p.sx=-_dx*8
	p.sy=-_dy*8
	p.dx=p.sx
	p.dy=p.sy
end

function obstacle_move(_dx, _dy)
	p.sx=_dx*8
	p.sy=_dy*8
	p.dx=0
	p.dy=0
	p.seq=seq_obstacle
end

function hit_move(_dx, _dy)
	p.sx=_dx*8
	p.sy=_dy*8
	p.dx=0
	p.dy=0
	p.seq=seq_obstacle
end

function setscreens()
	mset(p.level.serverx,p.level.servery,p.level.servertileon)	
	mset(p.level.screen1x,p.level.screen1y,p.level.screentileon)	
	mset(p.level.screen2x,p.level.screen2y,p.level.screentileon)	
end

function collection_complete()
	p.level.isdooropen=true
	mset(p.level.doorx,p.level.doory,p.level.opendoorspr)
end

function completed_level()
	p.respawnx=p.level.respawnx
	p.respawny=p.level.respawny
	p.message=messages[p.messagenr]
	-- close current door to ensure player goes through the portal
	p.level.isdooropen=false
	p.previouslevel=p.level
	if p.levelnr < 4 then
		p.levelnr+=1
		p.level=levels[p.levelnr]
		p.messagenr+=1
		p.level.isdooropen=true
	else
		p.isgameover=true
	end
end

function update_player_move()
	if btnbuffer==-1 then
		btnbuffer=getbtn()
	end
	p.t=min(p.t+0.25,1)
	p.seq()
	if p.t==1 then
		_upd=update_game
	end
end

function getbtn()
	for i=0,5 do
		if btnp(i) then
			return i
		end
	end
	return -1
end

function dobtn(button)
	if button<0 then 
		update_player(0,0)
		return
	end
	if button>=0 and button<4 then
		update_player(dirx[button+1],diry[button+1])
		return
	end
	if button==4 then
		run()
	end
end

function seq_walk()
	p.dx=p.sx*(1-p.t)
	p.dy=p.sy*(1-p.t)
end

function seq_obstacle()
	p.dx=p.sx*(1-p.t)
	p.dy=p.sy*(1-p.t)
end

hats = {
	{8, 52}, --blue
	{9, 52}, --blue
 {24, 53},--green
	{25, 53},--green
	{40, 54},--yellow
	{41, 54},--yellow
	{56, 55},--pink
	{57, 55} --pink
}

function getsmallhat(largehatspr)
	for hat in all(hats) do
		if hat[1] == largehatspr then
			return hat[2]
		end
	end
end


-->8
-- map

function init_map()
	level1={
		id=1,
		camerax=16*8*0,
		cameray=0,
		mapx=0,
		mapy=0,
		isdooropen=false,
		doorx=7,
		doory=10,
		opendoorspr=32,
		closeddoorspr=16,
		screen1x=7,
		screen1y=6,
		screen2x=9,
		screen2y=6,
		screentileon=tiles.screen_green_on,
		serverx=8,
		servery=6,
		servertileon=tiles.server_green_on,
		hasplayed=false,
		respawnx=2,
		respawny=3,
		score=0,
		maxscore=12,
		bugspeed=speed.medium,
		bug1x=1,
		bug1y=7,
		bug1dir=2,
		bug2x=10,
		bug2y=3,
		bug2dir=1,
		bug3x=11,
		bug3y=11,
		bug3dir=1}
	level2={
		id=2,
		isdooropen=false,
		doorx=5,
		doory=9,
		opendoorspr=32,
		closeddoorspr=20,
		arrowx=6,
		arrowy=9,
		arrowspr=36,
		hasplayed=false,
		respawnx=8,
		respawny=8,
		score=0,
		maxscore=12,
		portalarrowx=4,
		portalarrowy=12,
		portalx=3,
		portaly=12,
		portalnr=1,
		portalspr={73,74,75,76,77}}
	level3={
		id=3,
		isdooropen=false,
		doorx=10,
		doory=9,
		opendoorspr=34,
		closeddoorspr=22,
		arrowx=9,
		arrowy=9,
		arrowspr=38,
		hasplayed=false,
		respawnx=7,
		respawny=7,
		score=0,
		maxscore=12,
		portalarrowx=11,
		portalarrowy=12,
		portalx=12,
		portaly=12,
		portalnr=1,
		portalspr={105,106,107,108,109}}
	level4={
		id=4,
		isdooropen=false,
		doorx=5,
		doory=6,
		opendoorspr=35,
		closeddoorspr=23,
		arrowx=6,
		arrowy=6,
		arrowspr=39,
		hasplayed=false,
		respawnx=8,
		respawny=7,
		score=0,
		maxscore=12,
		portalarrowx=4,
		portalarrowy=3,
		portalx=3,
		portaly=3,
		portalnr=1,
		portalspr={121,122,123,124,125}}
	levels={level1,level2,level3,level4}
end

tiles={
	screen_blue_off=67,
	screen_blue_on=69,
	server_blue_off=71,
	server_blue_on=73,
	screen_green_off=83,
	screen_green_on=85,
	server_green_off=87,
	server_green_on=89,
	floor=63,
	bluewall=48,
	menuscore=112,
	menuhat=113
}

local tile_types={
	wall=0,
	collectable=1,
	score=2,
	hat=3,
	server=4,
	bug=5,
	anim_state_1=6,
	anim_state_2=7
}

speed={
	slow=30,
	medium=15,
	fast=7
}

function draw_map()
	map(0,0)
	camera(p.level.camerax,p.level.cameray)
 if t%speed.medium==0 then
 	animate_tiles()
 end
 if t%speed.medium==0 then
 	move_bugs()
 end
end

function animate_tiles()
	for x=p.level.mapx,p.level.mapx+15 do
		for y=p.level.mapy,p.level.mapy+15 do
			if is_anim_state_1(x,y) then
				swap_tiles(x,y)
			elseif is_anim_state_2(x,y) then
				unswap_tiles(x,y)
			end
		end
	end
end

function is_anim_state_1(x,y)
	local tile=mget(x,y)
	return fget(tile,tile_types.anim_state_1)
end

function is_anim_state_2(x,y)
	local tile=mget(x,y)
	return fget(tile,tile_types.anim_state_2)
end


--animated tiles need to be next to each other
function swap_tiles(x,y)
	local tile=mget(x,y)
	mset(x,y,tile+1)
end

function unswap_tiles(x,y)
	local tile=mget(x,y)
	mset(x,y,tile-1)
end

function isendoflevel(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.server)
end

function isobstacle(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.wall)
end

function iscollectable(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.collectable)
end

function isscore(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.score)
end

function ishat(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.hat)
end

function isbug(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,tile_types.bug)
end
-->8
-- tools

function get_frame(_ani,_speed)
	return _ani[flr(t/_speed)%#_ani+1]
end

function get_dy(_dys,_speed)
	return _dys[flr(t/_speed)%#_dys+1]
end
   
function rndint(_min, _max)
	return flr(_min+rnd(_max-_min))
end
-->8
-- bugs

local x_movements={-1,1,0,0}
local y_movements={0,0,-1,1}
local reverse_directions={1,0,3,2}

local bug1={x=nil,y=nil,dir=nil,tile=nill,speed=nil}
local bug2={x=nil,y=nil,dir=nil,tile=nill,speed=nil}
local bug3={x=nil,y=nil,dir=nil,tile=nill,speed=nil}

local bugs={bug1,bug2,bug3}
local bugs_anim={128,129}

function init_bugs(level)
	bug1.x=level.bug1x
	bug1.y=level.bug1y
	bug1.dir=level.bug1dir
	bug1.tile=tiles.floor
	bug1.speed=level.bugspeed
	bug2.x=level.bug2x
	bug2.y=level.bug2y
	bug2.dir=level.bug2dir
	bug2.tile=tiles.floor
	bug2.speed=level.bugspeed
	bug3.x=level.bug3x
	bug3.y=level.bug3y
	bug3.dir=level.bug3dir
	bug3.tile=tiles.floor
	bug3.speed=level.bugspeed
end

function move_bugs()
	for bug in all(bugs) do
		move_bug(bug)
	end
end

function move_bug(bug)
	if (not try_swap_and_move(bug)) then
		bug.dir=reverse_directions[bug.dir+1]
		try_swap_and_move(bug)
	end
end

function try_swap_and_move(bug)
	local new_x=bug.x+x_movements[bug.dir+1]
	local new_y=bug.y+y_movements[bug.dir+1]
	if (not isobstacle(new_x, new_y) and not isbug(new_x,new_y)) then
		swap_tiles_with(bug,new_x,new_y)
		bug.x=new_x
		bug.y=new_y
		return true
	end
	return false
end

function swap_tiles_with(bug,x2,y2)
	local tile=mget(bug.x,bug.y)
	mset(bug.x,bug.y,bug.tile)
	bug.tile=mget(x2,y2)
	mset(x2,y2,get_frame(bugs_anim,bug.speed))
end
__gfx__
00000000000ccc000000ccc00000ccc0000ccc00000ccc00000ccc00000000007777777777777777000000000000000077777777777777777777777777777777
0000000000cccc00000ccc00000ccc0000cccc0000cccc0000cccc00000ccc007777777777c11177000000000000000077771777777737777777277777aaaa77
0070070000cfff0000ccff0000ccff000027f2700027f27000cfff0000cccc0077c1117777c1117700000000000000007c7717177b7737377e7727277aaaaaa7
0007700000c2f20000cff20000cff2000022f2200022f22000c2f20000cfff0077c1117777c111770000000000000000c7771771b7773773e777277279aaaa97
000770000c0fff000c0fff000c0fff000f0f7f0f0c0f7f0000cfff0000c2f20077c11177c11111110000000000000000c77c7771b77b7773e77e777279999997
0070070000feeef0000eee00000eee0000eeeee00feeeeef00feeef00c0fff00c11111117777777700000000000000007c7c77177b7b77377e7e772779999997
000000000001010000011f000001f10000010100000101000001010000feeef077777777777777770000000000000000777c7777777b7777777e777779999997
00000000000808000080080000080800008000800008080000080800000808007777777677777776000000000000000077777776777777767777777677999976
ccccccccbbbbbbbbaaaaaaaaeeeeeeee000ccc00000ccc0000000000000000007777777777777777000000000000000071c77c1773b77b3779a77a9772e77e27
1111111c3333333b9999999a2222222e00cccc0000cccc0000000000000000007777777777b3337700000000000000007c7777c77b7777b77a7777a77e7777e7
1ccccc1c3bbbbb3b9aaaaa9a2eeeee2e0027f27000cfff00000000000000000077b3337777b3337700000000000000007c7777c77b7777b77a7777a77e7777e7
1c111c1c3b333b3b9a999a9a2e222e2e0022f22000c2f200000000000000000077b3337777b333770000000000000000c777777cb777777ba777777ae777777e
1ccccc1c3bbbbb3b9aaaaa9a2eeeee2e0c0fff000c0fff00000000000000000077b33377b333333300000000000000007c7777c77b7777b77a7777a77e7777e7
1111111c3333333b9999999a2222222e00feeef000feeef00000000000000000b33333337777777700000000000000007c7777c77b7777b77a7777a77e7777e7
11111c1c3b33333b9a99999a22222e2e000101000001010000000000000000007777777777777777000000000000000071c77c1773b77b3779a77a9772e77e27
11111116333333369999999622222226000808000008080000000000000000007777777677777776000000000000000075555556755555567555555675555556
ccccccccbbbbbbbbaaaaaaaaeeeeeeee0000000000000000000000000000000077777777777777770000000000000000000799990000bbb700002222ccc78888
1777777c3777777b9777777a2777777e000000000000000000000000000000007777777777a9997700000000000000004449fff9999b444b4440fff2fff84448
1777777c3777777b9777777a2777777e0000000000000000000000000000000077a9997777a9997700000000000000000409cfc9292b040b14103f372f280408
1777777c3777777b9777777a2777777e0000000000000000000000000000000077a9997777a9997700000000000000004449fff9999b444b4440fff7fff84448
1777777c3777777b9777777a2777777e0000000000000000000000000000000077a99977a9999999000000000000000074797f797c7b343b04007f777f787478
1777777c3777777b9777777a2777777e00000000000000000000000000000000a99999997777777700000000000000003337ddd7ccc7fff722279997eee79997
1777777c3777777b9777777a2777777e00000000000000000000000000000000777777777777777700000000000000003337ddd7ccc7fff722279997eee79997
1777777637777776977777762777777600000000000000000000000000000000777777767777777600000000000000004347fdf69c974f464247f9f6fef74946
ccccccccbbbbbbbbaaaaaaaaeeeeeeee000000000000000000000000000000007777777777777777000000000000000000000000000000000000000077777777
1111111c3333333b9999999a2222222e000000000000000000000000000000007777777777e2227700000000000000000003b000000b30000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e0000000000000000000000000000000077e2227777e222770000000000000000000b00000000b0000000000077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e0000000000000000000000000000000077e2227777e222770000000000000000000b00000000b0000003330077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e0000000000000000000000000000000077e22277e2222222000000000000000000b0000000000b00003bbb3077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e000c1100000b3300000a9900000e2200e2222222777777770000000000000000000b00000000b0000003330077777777
1c1c1c1c3b3b3b3b9a9a9a9a2e2e2e2e000c1100000b3300000a9900000e220077777777777777770000000000000000000b00000000b0000000000077777777
1111111633333336999999962222222600c1111000b3333000a9999000e22220777777767777777600000000000000000003b000000b30000000000077777776
6666666666666666666666661ccccccc1ccccccc1ccccccc1ccccccc1ccccccc1ccccccc1ccccccc1ccccccc7777777777777777777777777777777700000000
6666666666666666666666661c00000c1c00000c1c77777c1c77777c1c26668c1c86662c1c3666bc1cb6663c771cc7777771c7777771c7777770177700000000
6600000000000000000000661c00000c1c00000c1c27777c1c77e77c1c65556c1c65556c1c6c116c1c6c116c71cccc77771ccc77771ccc777701117700000000
6607777777777777777770661c00600c1c00000c1c7e7e2c1c2e7e7c1c65556c1c65556c1c6c116c1c6c116c1cc11cc7771c1c7771ccccc77011111700000000
6607000000000000000070661c00000c1c00000c1c77e77c1c77772c1c55555c1c55555c1c11111c1c11111c1c1111c7771c1c777771c7777770177700000000
6607000000000000000070661ccccccc1ccccccc1ccccccc1ccccccc1c86662c1c26668c1cb6663c1c3666bc71cccc77771ccc777771c7777770177700000000
6607000000000000000070667771c7777771c7777771c7777771c7771ccccccc1ccccccc1ccccccc1ccccccc771cc7777771c7777771c7777770177700000000
660700000000000000007066771ccc76771ccc76771ccc76771ccc761c77771c1c77771c1c77771c1c77771c7777777677777776777777767777777600000000
6607000000000000000070663bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb7777777777777777777777777777777700000000
6607000000000000000070663b00000b3b00000b3b77777b3b77777b3b26668b3b86662b3b3666bb3bb6663b773bb7777773b7777773b7777770377700000000
6607000000000000000070663b00000b3b00000b3b87777b3b77977b3b65556b3b65556b3b6c116b3b6c116b73bbbb77773bbb77773bbb777703337700000000
6607000000000000000070663b00600b3b00000b3b79798b3b89797b3b65556b3b65556b3b6c116b3b6c116b3bb33bb7773b3b7773bbbbb77033333700000000
6607000000000000000070663b00000b3b00000b3b77977b3b77778b3b55555b3b55555b3b11111b3b11111b3b3333b7773b3b777773b7777770377700000000
6607000000000000000070663bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb3b86662b3b26668b3bb6663b3b3666bb73bbbb77773bbb777773b7777770377700000000
6607000000000000000070667773b7777773b7777773b7777773b7773bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb773bb7777773b7777773b7777770377700000000
660700000000000000007066773bbb76773bbb76773bbb76773bbb763b77773b3b77773b3b77773b3b77773b7777777677777776777777767777777600000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000007777777777777777000000000000000000000000
6607000000000000000070660000000000000000000000000000000000000000000000000000000000000000779aa7777779a777000000000000000000000000
660700000000000000007066000000000000000000000000000000000000000000000000000000000000000079aaaa77779aaa77000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000009aa99aa7779a9a77000000000000000000000000
66077777777777777777706600000000000000000000000000000000000000000000000000000000000000009a9999a7779a9a77000000000000000000000000
660000000000000000000066000000000000000000000000000000000000000000000000000000000000000079aaaa77779aaa77000000000000000000000000
6666666666666666666666660000000000000000000000000000000000000000000000000000000000000000779aa7777779a777000000000000000000000000
66666666666666666666666600000000000000000000000000000000000000000000000000000000000000007777777677777776000000000000000000000000
0000000000000000dddddddd00000000000000000000000000000000000000000000000000000000000000007777777777777777000000000000000000000000
001cc00000000000dddddddd0000000000000000000000000000000000000000000000000000000000000000772ee7777772e777000000000000000000000000
01cccc0000c11100dddddddd000000000000000000000000000000000000000000000000000000000000000072eeee77772eee77000000000000000000000000
1cc11cc000c11100dddddddd00000000000000000000000000000000000000000000000000000000000000002ee22ee7772e2e77000000000000000000000000
1c1111c000c11100dddddddd00000000000000000000000000000000000000000000000000000000000000002e2222e7772e2e77000000000000000000000000
01cccc00c1111111dddddddd000000000000000000000000000000000000000000000000000000000000000072eeee77772eee77000000000000000000000000
001cc00000000000dddddddd0000000000000000000000000000000000000000000000000000000000000000772ee7777772e777000000000000000000000000
0000000000000000dddddddd00000000000000000000000000000000000000000000000000000000000000007777777677777776000000000000000000000000
77666777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677776667770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76272677767776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677762726770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677767776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777677767776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777677777670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
75555576555555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeebbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
2222222e2222222e2222222e2222222e2222222e2222222e2222222e2222222e3333333b3333333b3333333b3333333b3333333b3333333b3333333b3333333b
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b
2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b
22222226222222262222222622222226222222262222222622222226222222263333333633333336333333363333333633333336333333363333333633333336
eeeeeeee7cccccc77777777777777777777777777777777777777777bbbbbbbbeeeeeeee777777777777777777777777777777777777777777777777bbbbbbbb
2222222ec777777c777777777777777777777777777777777ee2ee273333333b2222222e77771777777777777777777777777777777777777773b7773333333b
2e2e2e2ec711117c77777777777777777777777777777777eeeeeee23b3b3b3b2e2e2e2e7c77171777777777777777777777777777777777777b77773b3b3b3b
2e2e2e2ec777777c77777777777777777777777777777777eeeeeee23b3b3b3b2e2e2e2ec777177177777777777777777777777777777777777b77773b3b3b3b
2e2e2e2ec711117c77777777777777777777777777777777eeeeeee23b3b3b3b2e2e2e2ec77c77717777777777777777777777777777777777b777773b3b3b3b
2e2e2e2ec777777c777777777777777777777777777777777eeeee273b3b3b3b2e2e2e2e7c7c771777777777777777777777777777777777777b77773b3b3b3b
2e2e2e2e7cccccc77777777777777777777777777777777777eee2773b3b3b3b2e2e2e2e777c777777777777777777777777777777777777777b77773b3b3b3b
222222267c17777677777776777777767777777677777776777e2776333333362222222677777776777777767777777677777776777777767773b77633333336
eeeeeeee77777777eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee77777777eeeeeeeebbbbbbbb77777777bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb77777777bbbbbbbb
2222222e777777772222222e2222222e2222222e2222222e777777772222222e3333333b777777773333333b3333333b3333333b3333333b777777773333333b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e777777772e2e2e2e3b3b3b3b777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e777777772e2e2e2e3b3b3b3b777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e777777772e2e2e2e3b3b3b3b777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e777777772e2e2e2e3b3b3b3b777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e777777772e2e2e2e3b3b3b3b777777773b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
22222226777777762222222622222226222222262222222677777776222222263333333677777776333333363333333633333336333333367777777633333336
eeeeeeee77777777eeeeeeeeeeeeeeee77777777eeeeeeee77777777bbbbbbbbeeeeeeee77777777bbbbbbbb77777777bbbbbbbbbbbbbbbb77777777bbbbbbbb
2222222e777777772222222e23e55e3e777777772222222e777777773333333b2222222e777777773333333b7777777731b55b1b3333333b777777773333333b
2e2e2e2e777777772e2e2e2eeeeeeeee777777772e2e2e2e777777773b3b3b3b2e2e2e2e777777773b3b3b3b77777777bbbbbbbb3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2be55ebe777777772e2e2e2e777777773b3b3b3b2e2e2e2e777777773b3b3b3b777777773cb55bcb3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2eeeeeeeee777777772e2e2e2e777777773b3b3b3b2e2e2e2e777777773b3b3b3b77777777bbbbbbbb3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2be55ebe777777772e2e2e2e777777773b3b3b3b2e2e2e2e777777773b3b3b3b777777773cb55bcb3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2eeeeeeeee777777772e2e2e2e777777773b3b3b3b2e2e2e2e777777773b3b3b3b77777777bbbbbbbb3b3b3b3b777777773b3b3b3b
22222226777777762222222623e55e36777777762222222677777776333333362222222677777776333333367777777631b55b16333333367777777633333336
eeeeeeee77777777eeeeeeee77777777777777777777777777777777eeeeeeeebbbbbbbb77777777777777777777777777777777bbbbbbbb77777777bbbbbbbb
2222222e777777772222222e777777777777777777777777777777772222222e3333333b7777777777aaaa7777777777777777773333333b777777773333333b
2e2e2e2e777777772e2e2e2e777777777777777777b33377777777772e2e2e2e3b3b3b3b777777777aaaaaa777777777777777773b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e777777777777777777b33377777777772e2e2e2e3b3b3b3b7777777779aaaa9777777777777777773b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e777777777777777777b33377777777772e2e2e2e3b3b3b3b777777777999999777777777777777773b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e777777777777777777b33377777777772e2e2e2e3b3b3b3b777777777999999777777777777777773b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e7777777777777777b3333333777777772e2e2e2e3b3b3b3b777777777999999777777777777777773b3b3b3b777777773b3b3b3b
22222226777777762222222677777776777777767777777677777776222222263333333677777776779999767777777677777776333333367777777633333336
eeeeeeee77777777eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeebbbbbbbbeeeeeeeebbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb77777777bbbbbbbb
2222222e777777772222222e2222222e2222222e2222222e2222222e3333333b2222222e3333333b3333333b3333333b3333333b3333333b777777773333333b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
2e2e2e2e777777772e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3b3b3b3b2e2e2e2e3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b777777773b3b3b3b
22222226777777762222222622222226222222262222222622222226333333362222222633333336333333363333333633333336333333367777777633333336
eeeeeeee00002222777777777777777777777777eeeeeeee77777777777777777777444777777777bbbbbbbb77777777777777777777777777733777bbbbbbbb
2222222e4440fff27777777777777777777777772222222e777777777777777777744477777777773777777b777777777777777777777777773bb3773333333b
2e2e2e2e14103f377777777777777777777777772eeeee2e7777777777777777777cfc77777377773777777b777777777777777777777777773bb3773b3b3b3b
2e2e2e2e4440fff77777777777777777777777772e222e2e777777777777777777744477777337773777777b77777777777777777777777773bbbb373b3b3b3b
2e2e2e2e04007f777777777777777777777777772eeeee2e777777777777777777944497333333773777777b77777777777777777777777773b44b373b3b3b3b
2e2e2e2e222799977777777777777777777777772222222e777777777777777777f999f7777337773777777b77777777777777777777777773b44b373b3b3b3b
2e2e2e2e2227999777777777777777777777777722222e2e777777777777777777717177777377773777777b77777777777777777777777773bbbb373b3b3b3b
222222264247f9f67777777677777776777777762222222677777776777777767772727677777776377777767777777677777776777777767733337633333336
cccccccceeeeeeeecccccccceeeeeeeecccccccceeeeeeee7777777772e77e2773b77b3777777777bbbbbbbbaaaaaaaabbbbbbbbaaaaaaaabbbbbbbbaaaaaaaa
1111111c2222222e1111111c2222222e1111111c2222222e777777777e7777e77b7777b7777777773333333b9999999a3333333b9999999a3333333b9999999a
1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e777777777e7777e77b7777b7777777773b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a
1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e77777777e777777eb777777b777777773b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a
1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e777777777e7777e77b7777b7777777773b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a
1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e777777777e7777e77b7777b7777777773b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a
1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e7777777772e77e2773b77b37777777773b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a
11111116222222261111111622222226111111162222222677777776755555567555555677777776333333369999999633333336999999963333333699999996
eeeeeeeecccccccceeeeeeeecccccccceeeeeeeecccccccc7777777771c77c1779a77a9777777777aaaaaaaabbbbbbbbaaaaaaaabbbbbbbbaaaaaaaabbbbbbbb
2222222e1111111c2222222e1111111c2222222e1111111c777777777c7777c77a7777a7777777779999999a3333333b9999999a3333333b9999999a3333333b
2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c777777777c7777c77a7777a7777777779a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b
2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c77777777c777777ca777777a777777779a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b
2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c777777777c7777c77a7777a7777777779a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b
2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c777777777c7777c77a7777a7777777779a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b
2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c2e2e2e2e1c1c1c1c7777777771c77c1779a77a97777777779a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b9a9a9a9a3b3b3b3b
22222226111111162222222611111116222222261111111677777776755555567555555677777776999999963333333699999996333333369999999633333336
cccccccc77777777777777777777777777777777cccccccc77777777777777777777777777777777aaaaaaaa77777777777777777777777777767777aaaaaaaa
1111111c777777777777777777777777777777771111111c777777777777777777777777777777779999999a777777777777777777777777777677779999999a
1c1c1c1c77c111777777777777777777777777771ccccc1c777777777777777777777777777777779aaaaa9a7777777777777777777777777cc7cc779a9a9a9a
1c1c1c1c77c111777777777777777777777777771c111c1c777777777777777777777777777777779a999a9a777777777777777777777777667676679a9a9a9a
1c1c1c1c77c111777777777777777777777777771ccccc1c777777777777777777777777777777779aaaaa9a777777777777777777777777c76667c79a9a9a9a
1c1c1c1c77c111777777777777777777777777771111111c777777777777777777777777777777779999999a777777777777777777777777667676679a9a9a9a
1c1c1c1cc111111177777777777777777777777711111c1c777777777777777777777777777777779a99999a7777777777777777777777777c676c779a9a9a9a
1111111677777776777777767777777677777776111111167777777677777776777777767777777699999996777777767777777677777776776c677699999996
cccccccc77777777ccccccccccccccccccccccccccccccccccccccccaaaaaaaaccccccccaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77777777aaaaaaaa
1111111c777777771111111c1111111c1111111c1111111c1111111c9999999a1111111c9999999a9999999a9999999a9999999a9999999a777777779999999a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
11111116777777761111111611111116111111161111111611111116999999961111111699999996999999969999999699999996999999967777777699999996
cccccccc77777777cccccccc77777777777777777777777777777777ccccccccaaaaaaaa77777777777777777777777777777777aaaaaaaa77777777aaaaaaaa
1111111c777777771111111c777777777777777777773777777777771111111c9999999a777777777888333777777777777777779999999a777777779999999a
1c1c1c1c777777771c1c1c1c77777777777777777b773737777777771c1c1c1c9a9a9a9a777777777888333777777777777777779a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c7777777777777777b7773773777777771c1c1c1c9a9a9a9a777777777888333777777777777777779a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c7777777777777777b77b7773777777771c1c1c1c9a9a9a9a777777777ccc999777777777777777779a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c77777777777777777b7b7737777777771c1c1c1c9a9a9a9a777777777ccc999777777777777777779a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c7777777777777777777b7777777777771c1c1c1c9a9a9a9a777777777ccc999777777777777777779a9a9a9a777777779a9a9a9a
11111116777777761111111677777776777777767777777677777776111111169999999677777776777777767777777677777776999999967777777699999996
cccccccc77777777cccccccccccccccc77777777cccccccc77777777aaaaaaaacccccccc77777777aaaaaaaa77777777aaaaaaaaaaaaaaaa77777777aaaaaaaa
1111111c777777771111111c19c55c9c777777771111111c777777779999999a1111111c777777779999999a7777777792a55a2a9999999a777777779999999a
1c1c1c1c777777771c1c1c1ccccccccc777777771c1c1c1c777777779a9a9a9a1c1c1c1c777777779a9a9a9a77777777aaaaaaaa9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1ac55cac777777771c1c1c1c777777779a9a9a9a1c1c1c1c777777779a9a9a9a777777779ea55aea9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1ccccccccc777777771c1c1c1c777777779a9a9a9a1c1c1c1c777777779a9a9a9a77777777aaaaaaaa9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1ac55cac777777771c1c1c1c777777779a9a9a9a1c1c1c1c777777779a9a9a9a777777779ea55aea9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1ccccccccc777777771c1c1c1c777777779a9a9a9a1c1c1c1c777777779a9a9a9a77777777aaaaaaaa9a9a9a9a777777779a9a9a9a
11111116777777761111111619c55c96777777761111111677777776999999961111111677777776999999967777777692a55a26999999967777777699999996
cccccccc77777777cccccccccccccccccccccccccccccccc77777777ccccccccaaaaaaaa77777777aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa77777777aaaaaaaa
1111111c777777771111111c1111111c1111111c1111111c777777771111111c9999999a777777779999999a9999999a9999999a9999999a777777779999999a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777771c1c1c1c9a9a9a9a777777779a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777771c1c1c1c9a9a9a9a777777779a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777771c1c1c1c9a9a9a9a777777779a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777771c1c1c1c9a9a9a9a777777779a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
1c1c1c1c777777771c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c777777771c1c1c1c9a9a9a9a777777779a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a777777779a9a9a9a
11111116777777761111111611111116111111161111111677777776111111169999999677777776999999969999999699999996999999967777777699999996
cccccccc999970007777777777777777777777777777777777777777aaaaaaaacccccccc507557507777777777777777777777777777777777777777aaaaaaaa
1111111c9fff944477777777777777777777777777777777777777779999999a1111111c5070070577777777777777777777777777777777777ccc779999999a
1c1c1c1c9cfc90407777777777777777777777777777777777e222779a9a9a9a1c1c1c1c777777777777777777777777777777777777777777c666879a9a9a9a
1c1c1c1c9fff94447777777777777777777777777777777777e222779a9a9a9a1c1c1c1c77777999777777777777777777777777777777777c6777689a9a9a9a
1c1c1c1c97f797477777777777777777777777777777777777e222779a9a9a9a1c1c1c1c9777779977777777777777777777777777777777796777689a9a9a9a
1c1c1c1c7ddd73337777777777777777777777777777777777e222779a9a9a9a1c1c1c1c7999997977777777777777777777777777777777779666879a9a9a9a
1c1c1c1c7ddd733377777777777777777777777777777777e22222229a9a9a9a1c1c1c1c7799977777777777777777777777777777777777777998779a9a9a9a
111111167fdf74367777777677777776777777767777777677777776999999961111111677777776777777767777777677777776777777767777777699999996
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
1111111c1111111c1111111c1111111c1111111c1111111c1111111c1111111c9999999a9999999a9999999a9999999a9999999a9999999a9999999a9999999a
1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
11111116111111161111111611111116111111161111111611111116111111169999999699999996999999969999999699999996999999969999999699999996

__gff__
00000000000000004a8a00000202020201010101000000004a8a00000000000000000000000000004a8a00000101010101010101000000004a8a000000000000000000418141814181418146865090000000004181418141814181468650900000000000000000000000004686000000000a0000000000000000004686000000
60a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
7272727272727272727272727272727200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333333333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3f3f3f3f3f3f3f3f3f3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3f3f3f3f3f3f3f3f083f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f30303030303030303f3f3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f4b6c30303f3f3f3f3f306b7c3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f7c5b30303f5357533f305c4b3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f30303f2f5d2c3f303f3f3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3030303f3f3f3f3f3f3030303f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f30303f3f3f3f3f3f3f3f3f303f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3030303030103030303030303f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f32323f3f3f3f3f3f3f3f32323f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f32323f314b6c7b5c313f32323f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3131313131313f3f3f3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333f3f3f3f3f313131313f3f3f3f3f3300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333333333333333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
090400001f11413015150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0800001f02307122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0400001f1142b010117002d11500700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0800001f1142b020117002d125000002f020000002b0202b1222412500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0800001c1141f1202313026130231201f1201c1101c302000003000000000320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0800001c11423120261001c30200000300000000032000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0400001f1242b023000001d12429023000000e1241a0230c1241802018020180560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d1000201d132000002112523131000001f13200000181321d132000001d1251f1351f13200000181221a1351f1320000023125241310000024132000002412524132330002612524131231221f1121d12518125
0d1000201d132000002112523131000001f13200000181321d132000001d1251f1351f13200000181221a1351f132000002312524131000002413200000241252413233000261252b1322b1222b1122b11500000
0d1000201d132000002112523131000001f13200000181321d132000001d1251f1351f13200000181221a1351f132000002312524131000002413200000241252413233000231252413529122291221d12518135
0b1000001151411511115211152111522115221151211515115141151111521115211152211522115121151513514135111352113521135221352213522135151351413511135211352113522135221352213515
0b1000001151411511115211152111522115221151211515115141151111521115211152211522115121151513514135111352113521135221352213522135151d5141d5111d5211d5211d5221d5221d5221d515
391000001151411511115211152111522115221151211515115141151111521115211152211522115121151513514135111352113521135221352213522135151f5141f5111f5211f5211f5221f5221f5221f515
23100000051350e5000e5000513504500045000513504500045000000005125000000513504500045000450007135135001350007135155001550007135155001550015500071251550007135155001550000000
23100000051350e5000e5000513504500045000513504500045000000005125000000513504500045000512507135135001350007135155001550007135155001550015500071251550007135155001550007125
031000201163311635000000000035633356350000034500000000000011633116353563335635345003450011633116350000000000356333563534500345000000000000116331163535633356353450000000
9d0e00201a3003240037600376001a3003760037600376001a3000000037600376001a3000000037600000001a3003240037600376001a3003760037600376001a3000000037600376001a300000003760037600
__music__
00 070a0d0f
00 090b0e0f
00 070a0d0f
00 080c0e0f
00 070a4d4f
00 090b4e4f
00 070a4d4f
02 080c4e4f

