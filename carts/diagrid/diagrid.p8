pico-8 cartridge // http://www.pico-8.com
version 39
__lua__
-- start
-- i'm starting at diagrid 
-- as sr developer advocate!
function _init()
	init_game()
end

function init_game()
	--init_dinos()
	--init_water()
	add_player()
	dirx={-1,1,0,0}
	diry={0,0,-1,1}
	t=0
	start_time=nil
	elapsed_time=nil
	game_over=false
	target=4
	score=0
	btnbuffer=-1
	_upd=update_menu
	_drw=draw_menu
end

function _update()
	t+=1
	_upd()
end

function _draw()
	cls()
	draw_map()
	--draw_water()
	--draw_time()
	_drw()
end

-->8
--menu

function draw_menu()
	local title=""
	local instr1=""
	local instr2=""
	local instr3=""
	local instr4=""
	local instr5=""
	local instr6=""
	local start="- press ❎ to start -"
	local credits="made by marc duiker"
	rectfill(0,0,127,127,5)
	rect(2,2,125,125,7)
	spr(get_frame(menu_dino.anim_move,menu_dino.anim_speed),menu_dino.x*8,menu_dino.y*8)
	print(title,hcenter(title),30,11)
	print(instr1,hcenter(instr1),45,7)
	print(instr2)
	print(instr3)
	print("")
	print(instr4)
	print(instr5)
	print(instr6)
	print(start,hcenter(start)-2,95,11)
	print(credits,hcenter(credits),110,9)
end

function update_menu()
	menu_dino={
		x=7,
		y=1,
		anim_speed=10,
		anim_move={6,7}
	}
	
	if btnp(❎) then
		sfx(5)
		_upd=update_game
		_drw=draw_player
	end
end

function update_game_over()
	if btnp(❎) then
		run()
	end
end

function draw_game_over()
	local text1="congratulations!"
	local text2="you finished in "..flr(elapsed_time).." sec"
	local text3="press ❎ to play again"
	local x1=hcenter(text3)-8
	local x2=x1+#text3*4+14
	rectfill(x1,40,x2,84,0)
	rect(x1+2,42,x2-2,82,7)
	print(text1,hcenter(text1),50,7)
	print(text2,hcenter(text2),60,7)
	print(text3,hcenter(text3)-2,70,7)
end

function update_time()
	if (start_time==nil) then
		start_time=time()
	end
	if not game_over then
		elapsed_time=time()-start_time
	end
end

function draw_time()
	local text=flr(elapsed_time).." sec"
	local x1=hcenter(text)
	local x2=x1+#text*4
	rectfill(x1-2,120,x2,128,15)
	rect(x1-2,120,x2,128,5)
	print(text,x1,122,0)
end

function hcenter(s)
  return 64-#s*2
end
-->8
-- player

function add_player()
	p={}
	p.x=8
	p.dx=0
	p.sx=0
	p.y=5
	p.dy=0
	p.sy=0
	p.t=0
	p.sprite=1
	p.anim_speed=10
	p.anim_still={1}
	p.anim_move={2,3}
	p.isflipped=false
	p.seq=nil
	p.hasegg=false
	p.eggspr=nil
	p.egg_anim=nil
	p.isstill=true
end

function draw_player()
	if p.isstill then
		spr(get_frame(p.anim_still,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	elseif not p.isstill then
		spr(get_frame(p.anim_move,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	end
	if p.hasegg then
		spr(get_frame(p.egg_anim,p.anim_speed),p.x*8+p.dx,p.y*8+p.dy,1,1,p.isflipped)
	end
end

function update_game()
	update_time()
	if btnbuffer==-1 then
  btnbuffer=getbtn()
 end
 dobtn(btnbuffer)
 btnbuffer=-1
end

function update_player(_dx,_dy)
	if (_dx<0) then
		p.isstill=false
		p.isflipped=true
	elseif (_dx>0) then
		p.isstill=false
		p.isflipped=false
	end
	
	if (_dx==0 and _dy==0) then
		p.isstill=true
	end
	
	local destx=p.x+_dx
	local desty=p.y+_dy
	if isblocking(destx,desty,p.hasegg) then
		p.sx=_dx*8
		p.sy=_dy*8
		p.dx=0
		p.dy=0
		p.t=0
		p.seq=seq_obstacle
		_upd=update_player_move
		if isdino(destx,desty) and p.hasegg then
			if try_deliver_egg(destx,desty,p.eggspr) then
				sfx(2)
				p.hasegg=false
				p.eggspr=nil
				p.egg_anim=nil
			end
		end
	else
		if isegg(destx,desty) and not p.hasegg then
			sfx(1)
			setegganim(destx,desty)
			p.hasegg=true
			p.eggspr=mget(destx,desty)
			mset(destx,desty,23)	
		end
		p.x+=_dx
		p.y+=_dy
		p.sx=-_dx*8
		p.sy=-_dy*8
		p.dx=p.sx
		p.dy=p.sy
		p.t=0
		if p.isstill then
			p.seq=nil	
		else
			p.seq=seq_walk
		end
		_upd=update_player_move
	end
	
	check_score()
end

function check_score()
	if score==target then
		game_over=true
		_upd=update_game_over
		_drw=draw_game_over
	end
end

function update_player_move()
	if btnbuffer==-1 then
  btnbuffer=getbtn()
 end
	
	p.t=min(p.t+0.25,1)
	p.seq()
	if p.t==1 then
		_upd=update_game
	end
end

function getbtn()
 for i=0,5 do
  if btnp(i) then
   return i
  end
 end
 return -1
end

function dobtn(button)
 if button<0 then 
 	-- stand still
 	return
 end
 if button>=0 and button<4 then
  update_player(dirx[button+1],diry[button+1])
  return
 end
 if button==5 then
  run()
 end
 
end

function seq_walk()
	p.dx=p.sx*(1-p.t)
	p.dy=p.sy*(1-p.t)
end

function seq_obstacle()
	p.dx=p.sx*(1-p.t)
	p.dy=p.sy*(1-p.t)
end

function isblocking(_x,_y,_hasegg)
	local isobs=isobstacle(_x,_y)
	local iswaterandegg=iswater(_x,_y) and _hasegg
	local isdino=isdino(_x,_y)
	if isdino then
		sfx(6)
		return true
	elseif iswaterandegg then
		sfx(4)
		return true
	elseif isobs then
		sfx(3)
		return true
	end
	
	return false
end

function isobstacle(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,0)
end

function iswater(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,3)
end

function isegg(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,1)
end

function isdino(_x,_y)
	local tile=mget(_x,_y)
	return fget(tile,2)
end

function setegganim(_x,_y)
	local tile=mget(_x,_y)
	p.egg_anim={tile+1,tile+2}
end
-->8
-- map

function init_map()
	dino1={
		x=nil,
		y=nil,
		heartx=1,
		hearty=1,
		anim_speed=15,
		anim_move1={40,42},
		anim_move2={41,43},
		anim_move3={56,58},
		anim_move4={57,59},
		hasegg=false,
		eggspr=48,
		eggx=3,
		eggy=3}
	dino2={
		x=nil,
		y=nil,
		heartx=14,
		hearty=1,
		anim_speed=15,
		anim_move1={12,14},
		anim_move2={13,15},
		anim_move3={28,30},
		anim_move4={29,31},
		hasegg=false,
		eggspr=35,
		eggx=12,
		eggy=3}
	dino3={
		x=nil,
		y=nil,
		heartx=1,
		hearty=13,
		anim_speed=15,
		anim_move1={8,10},
		anim_move2={9,11},
		anim_move3={24,26},
		anim_move4={25,27},
		hasegg=false,
		eggspr=32,
		eggx=3,
		eggy=14}
	dino4={
		x=13,
		y=13,
		heartx=13,
		hearty=13,
		anim_speed=15,
		anim_move1={44,46},
		anim_move2={45,47},
		anim_move3={60,62},
		anim_move4={61,63},
		hasegg=false,
		eggspr=51,
		eggx=12,
		eggy=14}
	dinos={dino1,dino2,dino3,dino4}
end

function try_deliver_egg(_x,_y,_eggspr)
	local is_delivered=false
	for _d=1,#dinos do
		is_delivered=try_deliver(_x,_y,_eggspr,dinos[_d])
		if is_delivered then 
			score+=1
			return true
		end
	end
	return false
end

function try_deliver(_x,_y,_eggspr,_dino)
	if _dino.eggspr==_eggspr and 
		is_adjacent(_x,_y,_dino) then
		place_hat(_dino)
		return true
	end
	return false
end

function place_hat(_dino)
	mset(_dino.eggx,_dino.eggy,_dino.eggspr)
	fset(_dino.eggspr,1,false)
	_dino.hasegg=true
end

function is_adjacent(_x,_y,_dino)
	return (abs(_x-_dino.x) <= 2 and
		abs(_y-_dino.y) <= 2)
end     

function draw_map()
	map(0,0)
	--for _d=1,#dinos do
	--	local _dino=dinos[_d]
	--	mset(_dino.x,_dino.y,get_frame(_dino.anim_move1,_dino.anim_speed))
	--	mset(_dino.x+1,_dino.y,get_frame(_dino.anim_move2,_dino.anim_speed))
	--	mset(_dino.x,_dino.y+1,get_frame(_dino.anim_move3,_dino.anim_speed))
	--	mset(_dino.x+1,_dino.y+1,get_frame(_dino.anim_move4,_dino.anim_speed))	
	--	if _dino.hasegg then
	--		spr(55,_dino.heartx*8,_dino.hearty*8)
	--	end
	--end
end
-->8
--map

function init_water()
	water={
		anim_speed=15,
		anim_move={38,39}
	}
end

function draw_water()
	for x=0,15 do
		for y=0,15 do
			local _tile=mget(x,y)
			if fget(_tile,3) then
				mset(x,y,get_frame(water.anim_move,water.anim_speed))
			end
		end
	end
end
-->8
-- tools

function get_frame(_ani,_speed)
	return _ani[flr(t/_speed)%#_ani+1]
end
   
function rndint(_min, _max)
	return flr(_min+rnd(_max-_min))
end
__gfx__
00000000000044400000000000004440000044400000444000004440000000007777777777777777777777777777777777777777777777777777777777777777
000000000004440000004440000444000004440000c7fc700004440000000000777777777777177777cccc77c17c17c1777c177777777777777777c771777777
00700700000cfc00000444000004fc00000cfc0000cc8cc0000cfc000000000077c111777c7717177cccccc7c17c17c177ccc1777777777777777c177c177777
00077000000444000004fc0000004400000484000f04840f000484000000000077c11177c777177171cccc17777777777ccccc177cccccc77777c17777c17777
000770000094449000004400000994000094449000944490009444900000000077c11177c77c7771711111177ccccc177ccccc1771111117777c1777777c1777
0070070000f999f000009400000f100000f999f0000999000f09990f0000000077c111777c7c771771111117ccccc1117ccccc177777777777c177777777c177
000000000001010000019f000001010000010100000101000001010000000000c1111111777c777771111117ccccc11177ccc177777777777c17777777777c17
00000000000505000050005000050500000505000005050000050500000000007777777677777776771111767ccccc16777c1776777777767777777677777776
00000000777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
0000000077775777776666776576576577765777777777777777776776777777777777777777377777bbbb77b37b37b3777b377777777777777777b773777777
000000007677575776666667657657657766657777777777777776577567777777b333777b7737377bbbbbb7b37b37b377bbb3777777777777777b377b377777
000000006777577575666657777777777666665776666667777765777756777777b33377b777377373bbbb37777777777bbbbb377bbbbbb77777b37777b37777
000000006776777575555557766666577666665775555557777657777775677777b33377b77b7773733333377bbbbb377bbbbb3773333337777b3777777b3777
000000007676775775555557666665557666665777777777776577777777567777b333777b7b773773333337bbbbb3337bbbbb377777777777b377777777b377
0000000077767777755555576666655577666577777777777657777777777567b3333333777b777773333337bbbbb33377bbb377777777777b37777777777b37
00000000777777767755557676666656777657767777777677777776777777767777777677777776773333767bbbbb36777b3776777777767777777677777776
00000000000000000000000000000000666666666666666600000000000000007777777777777777777777777777777777777777777777777777777777777777
000000000003b000000000000000000068ab555668a355560000000000000000777777777777977777aaaa77a97a97a9777a977777777777777777a779777777
00c11100000b000000000000000000006666666666666666000000000000000077a999777a7797977aaaaaa7a97a97a977aaa9777777777777777a977a977777
00c11100000b000000000000000000006893555668ab5556000000000000000077a99977a777977979aaaa97777777777aaaaa977aaaaaa77777a97777a97777
00c1110000b0000000000000000000006666666666666666000000000000000077a99977a77a7779799999977aaaaa977aaaaa9779999997777a9777777a9777
00c11100000b00000000000000000000689b555668935556000000000000000077a999777a7a779779999997aaaaa9997aaaaa977777777777a977777777a977
c1111111000b0000000000000000000066666666666666660000000000000000a9999999777a777779999997aaaaa99977aaa977777777777a97777777777a97
000000000003b0000000000000000000677777766777777677777777000000007777777677777776779999767aaaaa96777a9776777777767777777677777776
333333353333b3353333333500000000777777775075575077777777777777777777777777777777777777777777777777777777777777777777777777777777
3763c335376b7b353763c335000000007888333750700705777ccc7777777777777777777777277777eeee77e27e27e2777e277777777777777777e772777777
366333353663b3353663383500000000788833377777777777c666877777777777e222777e7727277eeeeee7e27e27e277eee2777777777777777e277e277777
3663343536633435366387850000000078883337777779997c6777687777777777e22277e777277272eeee27777777777eeeee277eeeeee77777e27777e27777
333333353333333533333835000000007ccc999797777799796777687777777777e22277e77e7772722222277eeeee277eeeee2772222227777e2777777e2777
3a393935393a393539393a35000000007ccc999779999979779666877777777777e222777e7e772772222227eeeee2227eeeee277777777777e277777777e277
333333353333333533333335000000007ccc9997779997777779987777777777e2222222777e777772222227eeeee22277eee277777777777e27777777777e27
55555555555555555555555500000000777777767777777677777776777777767777777677777776772222767eeeee26777e2776777777767777777677777776
66666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66077777777777777777706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66070000000000000000706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66077777777777777777706600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000060303030302020200030303030000000603030303020202000000000101000006000000000002020000000001010100060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2424242424242424242424242424242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373734373737113737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373737373716373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
243737373708370c0d0915123737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
243737373737373737370f373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
24373737371837373737370b0d09372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373737373737373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373737373737373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373737373737373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373737373737373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2437373737373737373737373737372400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2424242424242424242424242424242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4041414141414141414141414141414200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6061616161616161616161616161616200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
